{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hey Welcome To The Coding Interview Preparation Guide","text":"<p>Welcome to the Coding Interview: Preparation Guide! This site is designed to help you prepare for technical interviews with a focus on Python, SQL, and key discussion topics.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>This guide is based on the book \"Cracking the Coding Interview\" by Gayle Laakmann McDowell, which is widely regarded as a must-read for anyone preparing for technical interviews. The goal of this repository is to provide a structured approach to practice and discussion, enabling you to confidently tackle coding challenges and system design questions.</p>"},{"location":"#1-python-practice","title":"1. Python Practice","text":"<p>This section contains Python coding exercises that cover a range of topics commonly asked in technical interviews, such as:</p> <ul> <li>Data Structures (Arrays, Linked Lists, Stacks, Queues, Trees, Graphs, etc.)</li> <li>Algorithms (Sorting, Searching, Dynamic Programming, Recursion, etc.)</li> <li>Problem Solving (String manipulation, Number theory, Bit manipulation, etc.)</li> </ul> <p>Each exercise comes with a problem statement, example input/output, and a solution for reference.</p> <p>I would like to extend a special thanks to Abdullah Al Masud Tushar for his invaluable contributions For This Python Section.</p>"},{"location":"#2-sql-practice","title":"2. SQL Practice","text":"<p>This section provides SQL exercises to help you practice database-related interview questions, including:</p> <ul> <li>Basic to Advanced SQL queries</li> <li>Joins, Subqueries, and CTEs</li> <li>Aggregations and Window Functions</li> <li>Database Design and Normalization</li> </ul> <p>Each SQL problem is designed to test your knowledge of database concepts and your ability to write efficient queries.</p>"},{"location":"#3-discussion-topics","title":"3. Discussion Topics","text":"<p>This section includes discussion topics and questions to deepen your understanding of:</p> <ul> <li>System Design (Scalability, Load Balancing, Caching, etc.)</li> <li>Object-Oriented Design Principles</li> <li>Best Practices in Software Development</li> <li>Behavioral Interview Questions and Strategies</li> </ul> <p>These topics are aimed at preparing you for the non-coding aspects of technical interviews, such as discussing your approach, explaining trade-offs, and demonstrating clear communication.</p>"},{"location":"SQL-practics/sql/","title":"Introduction to SQL","text":"<p>SQL (Structured Query Language) is a standard programming language used to manage and manipulate relational databases. It is widely used for querying, updating, and managing data.</p>"},{"location":"SQL-practics/sql/#key-sql-concepts","title":"Key SQL Concepts","text":""},{"location":"SQL-practics/sql/#1-databases-and-tables","title":"1. Databases and Tables","text":"<p>A database is a collection of data organized in a structured format. Within a database, data is stored in tables. A table is made up of rows and columns, where each row represents a unique record, and each column represents a field in that record.</p>"},{"location":"SQL-practics/sql/#2-sql-statements","title":"2. SQL Statements","text":"<p>SQL provides a variety of statements to interact with data. The most common SQL statements are:</p> <ul> <li>SELECT: Retrieves data from a database.</li> <li>INSERT: Adds new data into a database.</li> <li>UPDATE: Modifies existing data.</li> <li>DELETE: Removes data from a database.</li> <li>CREATE TABLE: Creates a new table.</li> <li>DROP TABLE: Deletes an existing table.</li> </ul>"},{"location":"SQL-practics/sql/#basic-sql-syntax","title":"Basic SQL Syntax","text":""},{"location":"SQL-practics/sql/#1-creating-a-table","title":"1. Creating a Table","text":"<p>To create a new table in a database, use the <code>CREATE TABLE</code> statement:</p> <p><pre><code>CREATE TABLE Employees (\n    EmployeeID INT PRIMARY KEY,\n    FirstName VARCHAR(50),\n    LastName VARCHAR(50),\n    Age INT,\n    Department VARCHAR(50)\n);\n</code></pre> INSERT: Adds new records to a table.</p> <pre><code>INSERT INTO table_name (column1, column2) VALUES (value1, value2);\n\nINSERT INTO customers (name, email) VALUES ('John Doe', 'john@example.com');\nUPDATE: Modifies existing records in a table.\n</code></pre> <pre><code>UPDATE table_name SET column1 = value1 WHERE condition;\n\nUPDATE products SET price = 19.99 WHERE id = 1001;\nDELETE: Removes records from a table.\n</code></pre> <pre><code>DELETE FROM table_name WHERE condition;\n\nDELETE FROM orders WHERE order_date &lt; '2023-01-01';\nIntermediate SQL Concepts\nJOINs: Combines rows from two or more tables based on a related column.\n</code></pre> <p><pre><code>SELECT * FROM table1\nINNER JOIN table2 ON table1.column = table2.column;\n\nSELECT orders.order_id, customers.name\nFROM orders\nINNER JOIN customers ON orders.customer_id = customers.id;\nAggregate Functions: Perform calculations on a set of values and return a single result.\n</code></pre> <pre><code>SELECT AVG(column_name) FROM table_name;\n\nSELECT COUNT(*) AS total_employees, AVG(salary) AS average_salary\nFROM employees;\nGROUP BY: Groups rows that have the same values in specified columns.\n</code></pre></p> <pre><code>SELECT column1, COUNT(*) FROM table_name GROUP BY column1;\nSELECT department, COUNT(*) AS employee_count\nFROM employees\nGROUP BY department;\nAdvanced SQL Techniques\nSubqueries: A query nested inside another query.\n</code></pre> <pre><code>SELECT column_name FROM table_name\nWHERE column_name IN (SELECT column_name FROM another_table);\nSELECT product_name\nFROM products\nWHERE category_id IN (SELECT id FROM categories WHERE name = 'Electronics');\nWindow Functions: Perform calculations across a set of rows that are related to the current row.\n</code></pre> <pre><code>SELECT column1, column2,\n       AVG(column2) OVER (PARTITION BY column1) AS avg_value\nFROM table_name;\nSELECT employee_name, department, salary,\n       AVG(salary) OVER (PARTITION BY department) AS dept_avg_salary\nFROM employees;\nCommon Table Expressions (CTEs): Temporary named result set created within a SELECT statement.\n</code></pre> <pre><code>WITH cte_name AS (\n    SELECT column1, column2 FROM table_name WHERE condition\n)\nSELECT * FROM cte_name;\n\nWITH high_value_orders AS (\n    SELECT * FROM orders WHERE total_amount &gt; 1000\n)\nSELECT customer_id, AVG(total_amount) AS avg_order_value\nFROM high_value_orders\nGROUP BY customer_id;\n</code></pre> <p>Best Practices Use meaningful table and column names: Choose clear, descriptive names for better readability. Optimize queries: Use indexes on frequently queried columns and avoid selecting unnecessary data. Use parameterized queries: Prevent SQL injection attacks by using prepared statements. Regular backups: Implement a robust backup strategy to prevent data loss. Normalize your database: Design your schema to minimize data redundancy and improve data integrity. Use transactions: Ensure data consistency when performing multiple related operations. Document your database: Maintain up-to-date documentation of your schema and important queries. Regular maintenance: Perform routine tasks like updating statistics and rebuilding indexes. By mastering these SQL concepts and following best practices, you'll be well-equipped to work with databases effectively and efficiently.</p>"},{"location":"discussion-topics/topics/","title":"Discussion Topic","text":"This Page Under Cooking"},{"location":"python-practics/Day_1/","title":"Question 1","text":""},{"location":"python-practics/Day_1/#question","title":"Question:","text":"<p>Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).The numbers obtained should be printed in a comma-separated sequence on a single line.</p>"},{"location":"python-practics/Day_1/#hints","title":"Hints:","text":"<p>Consider use range(#begin, #end) method.</p> <p>Main author's Solution: Python 2</p> <pre><code>l=[]\nfor i in range(2000, 3201):\n    if (i%7==0) and (i%5!=0):\n        l.append(str(i))\n\nprint ','.join(l)\n</code></pre> <p>My Solution: Python 3 - Using for loops</p> <pre><code>for i in range(2000,3201):\n    if i%7 == 0 and i%5!=0:\n        print(i,end=',')\nprint(\"\\b\")\n</code></pre> <ul> <li>Using generators and list comprehension</li> </ul> <pre><code>print(*(i for i in range(2000, 3201) if i%7 == 0 and i%5 != 0), sep=\",\")\n</code></pre>"},{"location":"python-practics/Day_1/#question-2","title":"Question 2","text":""},{"location":"python-practics/Day_1/#question_1","title":"Question:","text":"<p>Write a program which can compute the factorial of a given numbers.The results should be printed in a comma-separated sequence on a single line.Suppose the following input is supplied to the program: 8 Then, the output should be:40320</p>"},{"location":"python-practics/Day_1/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>def fact(x):\n    if x == 0:\n        return 1\n    return x * fact(x - 1)\n\nx = int(raw_input())\nprint fact(x)\n</code></pre> <p>My Solution: Python 3</p> <ul> <li>Using While Loop <pre><code>n = int(input()) #input() function takes input as string type\n                 #int() converts it to integer type\nfact = 1\ni = 1\nwhile i &lt;= n:\n    fact = fact * i;\n    i = i + 1\nprint(fact)\n</code></pre></li> <li>Using For Loop <pre><code>n = int(input()) #input() function takes input as string type\n                #int() converts it to integer type\nfact = 1\nfor i in range(1,n+1):\n    fact = fact * i\nprint(fact)\n</code></pre></li> <li>Using Lambda Function</li> </ul>"},{"location":"python-practics/Day_1/#solution-by-harshraj22-n-intinput-def-shortfactx-return-1-if-x-1-else-xshortfactx-1-printshortfactn","title":"<pre><code># Solution by:  harshraj22\n\nn = int(input())\ndef shortFact(x): return 1 if x &lt;= 1 else x*shortFact(x-1)\nprint(shortFact(n))\n</code></pre>","text":""},{"location":"python-practics/Day_1/#solution-by-minnielahoti-while-true-try-num-intinputenter-a-number-break-except-valueerror-as-err-printerr-org-num-fact-1-while-num-fact-num-fact-num-num-1-printfthe-factorial-of-org-is-fact","title":"<pre><code>'''Solution by: minnielahoti\n'''\n\nwhile True:\ntry:\n    num = int(input(\"Enter a number: \"))\n    break\nexcept ValueError as err:\n    print(err)\n\norg = num\nfact = 1\nwhile num:\n    fact = num * fact\n    num = num - 1\nprint(f'the factorial of {org} is {fact}')\n</code></pre>","text":""},{"location":"python-practics/Day_1/#soltuion-by-kruthikasr-from-functools-import-reduce-def-funacc-item-return-accitem-num-intinput-printreducefunrange1-num1-1","title":"<pre><code>'''Soltuion by: KruthikaSR\n'''\nfrom functools import reduce\n\ndef fun(acc, item):\n    return acc*item\n\nnum = int(input())\nprint(reduce(fun,range(1, num+1), 1))\n</code></pre>","text":""},{"location":"python-practics/Day_1/#question-3","title":"Question 3","text":""},{"location":"python-practics/Day_1/#question_2","title":"Question:","text":"<p>With a given integral number n, write a program to generate a dictionary that contains (i, i x i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.Suppose the following input is supplied to the program: 8</p> <p>Then, the output should be:</p> <pre><code>{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}\n</code></pre>"},{"location":"python-practics/Day_1/#hints_2","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.Consider use dict()</p> <p>Main author's Solution: Python 2</p> <pre><code>n = int(raw_input())\nd = dict()\nfor i in range(1,n+1):\n    d[i] = i * i\nprint d\n</code></pre> <p>My Solution: Python 3:</p> <ul> <li>Using for loop</li> </ul> <pre><code>n = int(input())\nans = {}\nfor i in range (1,n+1):\n    ans[i] = i * i\nprint(ans)\n</code></pre> <ul> <li>Using dictionary comprehension</li> </ul>"},{"location":"python-practics/Day_1/#n-intinput-ansi-ii-for-i-in-range1n1-printans","title":"<pre><code>n = int(input())\nans={i : i*i for i in range(1,n+1)}\nprint(ans)\n</code></pre>","text":""},{"location":"python-practics/Day_1/#solution-by-minnielahoti-corrected-by-thenobleknight-try-num-intinputenter-a-number-except-valueerror-as-err-printerr-dictio-dict-for-item-in-rangenum1-if-item-0-continue-else-dictioitem-item-item-printdictio","title":"<pre><code>'''Solution by: minnielahoti\n   Corrected by: TheNobleKnight \n'''\n\ntry:\n    num = int(input(\"Enter a number: \"))\nexcept ValueError as err:\n    print(err)\n\ndictio = dict()\nfor item in range(num+1):\n    if item == 0:\n        continue\n    else:\n    dictio[item] = item * item\nprint(dictio)\n</code></pre>","text":""},{"location":"python-practics/Day_1/#solution-by-yurbika-corrected-by-developer-47-num-intinputnumber-printdictenumerateii-for-i-in-range1-num1-1","title":"<pre><code>'''Solution by: yurbika\n   Corrected by: developer-47\n'''\n\nnum = int(input(\"Number: \"))\nprint(dict(enumerate([i*i for i in range(1, num+1)], 1)))\n</code></pre>","text":""},{"location":"python-practics/Day_1/#conclusion","title":"Conclusion","text":"<p>These was the solved problems of day 1. The above problems are very easy for the basic syntex learners.I have shown some easy ways of coding in my solutions. Lets see how to face and attack new problems in the next day.</p>"},{"location":"python-practics/Day_10/","title":"Question 31","text":""},{"location":"python-practics/Day_10/#question","title":"Question:","text":"<p>Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.</p>"},{"location":"python-practics/Day_10/#hints","title":"Hints:","text":"<pre><code>Use dict[key]=value pattern to put entry into a dictionary.Use ** operator to get power of a number.Use range() for loops.\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printDict():\n    d=dict()\n    for i in range(1,21):\n        d[i]=i**2\n    print d\n\nprintDict()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printDict():\n    dict={i:i**2 for i in range(1,21)}   # Using comprehension method and\n    print(dict)\n\nprintDict()\n</code></pre>"},{"location":"python-practics/Day_10/#question-32","title":"Question 32","text":""},{"location":"python-practics/Day_10/#question_1","title":"Question:","text":"<p>Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.</p>"},{"location":"python-practics/Day_10/#hints_1","title":"Hints:","text":"<pre><code>Use dict[key]=value pattern to put entry into a dictionary.Use ** operator to get power of a number.Use range() for loops.Use keys() to iterate keys in the dictionary. Also we can use item() to get key/value pairs.\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printDict():\n    d=dict()\n    for i in range(1,21):\n        d[i]=i**2\n    for k in d.keys():\n        print k\nprintDict()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printDict():\n    dict = {i: i**2 for i in range(1, 21)}\n    print(dict.keys())      # print keys of a dictionary\n\nprintDict()\n</code></pre>"},{"location":"python-practics/Day_10/#question-33","title":"Question 33","text":""},{"location":"python-practics/Day_10/#question_2","title":"Question:","text":"<p>Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).</p>"},{"location":"python-practics/Day_10/#hints_2","title":"Hints:","text":"<pre><code>Use ** operator to get power of a number.Use range() for loops.Use list.append() to add values into a list.\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printList():\n    li=list()\n    for i in range(1,21):\n        li.append(i**2)\n    print li\n\nprintList()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printList():\n    lst = [i ** 2 for i in range(1, 21)]\n    print(lst)\n\nprintList()\n</code></pre>"},{"location":"python-practics/Day_10/#question-34","title":"Question 34","text":""},{"location":"python-practics/Day_10/#question_3","title":"Question:","text":"<p>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.</p>"},{"location":"python-practics/Day_10/#hints_3","title":"Hints:","text":"<pre><code>Use ** operator to get power of a number.Use range() for loops.Use list.append() to add values into a list.Use [n1:n2] to slice a list\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printList():\n    li=list()\n    for i in range(1,21):\n        li.append(i**2)\n    print li[:5]\n\nprintList()\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_10/#def-printlist-lst-i-2-for-i-in-range1-21-for-i-in-range5-printlsti-printlist","title":"<pre><code>def printList():\n    lst = [i ** 2 for i in range(1, 21)]\n\n    for i in range(5):\n        print(lst[i])\n\nprintList()\n</code></pre>","text":""},{"location":"python-practics/Day_10/#solution-by-popomaticbubble-def-squaresn-squares_list-i2-for-i-in-range1n1-printsquares_list05-squares20","title":"<pre><code>'''Solution by: popomaticbubble\n'''\ndef squares(n):\n    squares_list = [i**2 for i in range(1,n+1)]\n    print(squares_list[0:5])\nsquares(20)\n</code></pre>","text":"<pre><code>'''Solution by: yuan1z'''\nfunc = lambda :print([i**2 for i in range(1,21)][:5])\n</code></pre>"},{"location":"python-practics/Day_10/#question-35","title":"Question 35","text":""},{"location":"python-practics/Day_10/#question_4","title":"Question:","text":"<p>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.</p>"},{"location":"python-practics/Day_10/#hints_4","title":"Hints:","text":"<pre><code>Use ** operator to get power of a number.Use range() for loops.Use list.append() to add values into a list.Use [n1:n2] to slice a list\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printList():\n    li=list()\n    for i in range(1,21):\n        li.append(i**2)\n    print li[-5:]\n\nprintList()\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_10/#def-printlist-lst-i-2-for-i-in-range1-21-for-i-in-range1914-1-printlsti-printlist","title":"<pre><code>def printList():\n    lst = [i ** 2 for i in range(1, 21)]\n    for i in range(19,14,-1):\n        print(lst[i])\n\nprintList()\n</code></pre>","text":"<pre><code>'''Solution by: popomaticbubble\n'''\ndef squares(n):\n    squares_list = [i**2 for i in range(1,n+1)]\n    print(squares_list[-5:])\nsquares(20)\n</code></pre>"},{"location":"python-practics/Day_10/#question-36","title":"Question 36","text":""},{"location":"python-practics/Day_10/#question_5","title":"Question:","text":"<p>Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.</p> <pre><code>Hints: Use ** operator to get power of a number.Use range() for loops.Use list.append() to add values into a list.Use [n1:n2] to slice a list\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printList():\n    li=list()\n    for i in range(1,21):\n        li.append(i**2)\n    print li[5:]\n\nprintList()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printList():\n    lst = [i ** 2 for i in range(1, 21)]\n    for i in range(5,20):\n        print(lst[i])\n\nprintList()\n</code></pre>"},{"location":"python-practics/Day_10/#question-37","title":"Question 37","text":""},{"location":"python-practics/Day_10/#question_6","title":"Question:","text":"<p>Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).</p>"},{"location":"python-practics/Day_10/#hints_5","title":"Hints:","text":"<pre><code>Use ** operator to get power of a number.Use range() for loops.Use list.append() to add values into a list.Use tuple() to get a tuple from a list.\n</code></pre> <p>Main Author's Solution: Python 2</p> <pre><code>def printTuple():\n    li=list()\n    for i in range(1,21):\n        li.append(i**2)\n    print tuple(li)\n\nprintTuple()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printTupple():\n    lst = [i ** 2 for i in range(1, 21)]\n    print(tuple(lst))\n\nprintTupple()\n</code></pre> <pre><code>'''\nSolution by: Seawolf159\n'''\ndef square_of_numbers():\n    return tuple(i ** 2 for i in range(1, 21))\n\nprint(square_of_numbers())\n</code></pre>"},{"location":"python-practics/Day_10/#comment","title":"Comment","text":"<p>Problems of this section is very much easy and all of those are of a modification of same type problem which mainly focused on using some commonly used function works with list,dictionary, tupple.In my entire solutions, I havn't tried to solve problems in efficient way.Rather I tried to solve in a different way that I can.This will help a beginner to know how simplest problems can be solved in different ways.</p>"},{"location":"python-practics/Day_11/","title":"Question 38","text":""},{"location":"python-practics/Day_11/#question","title":"Question:","text":"<p>With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.</p>"},{"location":"python-practics/Day_11/#hints","title":"Hints:","text":"<p>Use [n1:n2] notation to get a slice from a tuple.</p> <p>Main Author's Solution: Python 2</p> <pre><code>tp = (1,2,3,4,5,6,7,8,9,10)\ntp1 = tp[:5]\ntp2 = tp[5:]\nprint tp1\nprint tp2\n</code></pre> <p>My Solution: Python 3</p> <pre><code>tpl = (1,2,3,4,5,6,7,8,9,10)\n\nfor i in range(0,5):\n    print(tpl[i],end = ' ')\nprint()\nfor i in range(5,10):\n    print(tpl[i],end = ' ')\n</code></pre> <p>OR</p>"},{"location":"python-practics/Day_11/#tpl-12345678910-lst1lst2-for-i-in-range05-lst1appendtpli-for-i-in-range510-lst2appendtpli-printlst1-printlst2","title":"<pre><code>tpl = (1,2,3,4,5,6,7,8,9,10)\nlst1,lst2 = [],[]\n\nfor i in range(0,5):\n    lst1.append(tpl[i])\n\nfor i in range(5,10):\n    lst2.append(tpl[i])\n\nprint(lst1)\nprint(lst2)\n</code></pre>","text":"<pre><code>'''\nSolution by: CoffeeBrakeInc\n'''\n\ntup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\nlt = int(len(tup)/2)\nprint(tup[:lt], tup[lt:])\n</code></pre> <pre><code>'''\nSolution by: AasaiAlangaram\n'''\n\ntp = (1,2,3,4,5,6,7,8,9,10)\n\nprint('The Original Tuple:',tp)\n\n[print('Splitted List :{List}'.format(List = tp[x:x+5])) for x in range(0,len(tp),5)]\n</code></pre> <pre><code>'''\nSolution by: saxenaharsh24\n'''\n\ntup = [i for i in range(1, 11)]\nprint(f'{tuple(tup[:5])} \\n{tuple(tup[5:])}')\n</code></pre>"},{"location":"python-practics/Day_11/#question-39","title":"Question 39","text":""},{"location":"python-practics/Day_11/#question_1","title":"Question:","text":"<p>Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10).</p>"},{"location":"python-practics/Day_11/#hints_1","title":"Hints:","text":"<p>Use \"for\" to iterate the tuple. Use tuple() to generate a tuple from a list.</p> <p>Main Author's Solution: Python 2</p> <pre><code>tp = (1,2,3,4,5,6,7,8,9,10)\nli = list()\nfor i in tp:\n    if tp[i]%2 == 0:\n        li.append(tp[i])\n\ntp2 = tuple(li)\nprint tp2\n</code></pre> <p>My Solution: Python 3</p> <pre><code>tpl = (1,2,3,4,5,6,7,8,9,10)\ntpl1 = tuple(i for i in tpl if i%2 == 0)\nprint(tpl1)\n</code></pre> <p>OR</p> <pre><code>tpl = (1,2,3,4,5,6,7,8,9,10)\ntpl1 = tuple(filter(lambda x : x%2==0,tpl))  # Lambda function returns True if found even element.\n                                             # Filter removes data for which function returns False\nprint(tpl1)\n</code></pre>"},{"location":"python-practics/Day_11/#question-40","title":"Question 40","text":""},{"location":"python-practics/Day_11/#question_2","title":"Question:","text":"<p>Write a program which accepts a string as input to print \"Yes\" if the string is \"yes\" or \"YES\" or \"Yes\", otherwise print \"No\".</p>"},{"location":"python-practics/Day_11/#hints_2","title":"Hints:","text":"<p>Use if statement to judge condition.</p> <p>Main Author's Solution: Python 2</p> <pre><code>s= raw_input()\nif s==\"yes\" or s==\"YES\" or s==\"Yes\":\n    print \"Yes\"\nelse:\n    print \"No\"\n</code></pre> <p>Solution: Python 3</p> <pre><code>'''\nSolution by: Seawolf159\n'''\ntext = input(\"Please type something. --&gt; \")\nif text == \"yes\" or text == \"YES\" or text == \"Yes\":\n    print(\"Yes\")\nelse:\n    print(\"No\")\n</code></pre>"},{"location":"python-practics/Day_11/#solution-by-aasaialangaram-input-inputenter-string-output-joinyes-if-input-yes-or-input-yes-or-input-yes-else-no-printstroutput","title":"<pre><code>'''\nSolution by: AasaiAlangaram\n'''\ninput = input('Enter string:')\noutput = ''.join(['Yes' if input == 'yes' or input =='YES' or input =='Yes' else 'No' ])\nprint(str(output))\n</code></pre>","text":""},{"location":"python-practics/Day_11/#solution-by-prashanth-x-strinputlower-if-x-yes-printyes-else-printno","title":"<pre><code>Solution by: Prashanth\n'''\nx = str(input().lower())\nif x == 'yes':\n    print('Yes')\nelse:\n    print('No')\n</code></pre>","text":""},{"location":"python-practics/Day_11/#question-41","title":"Question 41","text":""},{"location":"python-practics/Day_11/#question_3","title":"Question:","text":"<p>Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].</p>"},{"location":"python-practics/Day_11/#hints_3","title":"Hints:","text":"<p>Use map() to generate a list.Use lambda to define anonymous functions.</p> <p>Main Author's Solution: Python 2</p> <pre><code>li = [1,2,3,4,5,6,7,8,9,10]\nsquaredNumbers = map(lambda x: x**2, li)\nprint squaredNumbers\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_11/#no-different-way-of-code-is-written-as-the-requirment-is-specificly-mentioned-in-problem-description-li-12345678910-squarednumbers-maplambda-x-x2-li-returns-map-type-object-data-printlistsquarednumbers-converting-the-object-into-list","title":"<pre><code># No different way of code is written as the requirment is specificly mentioned in problem description\n\nli = [1,2,3,4,5,6,7,8,9,10]\nsquaredNumbers = map(lambda x: x**2, li)  # returns map type object data\nprint(list(squaredNumbers))               # converting the object into list\n</code></pre>","text":""},{"location":"python-practics/Day_11/#solution-by-saxenaharsh24-def-sqrsitem-return-item-2-lst-i-for-i-in-range1-11-printlistmapsqrs-lst","title":"<pre><code>'''\nSolution by: saxenaharsh24\n'''\ndef sqrs(item):\n    return item ** 2\n\n\nlst = [i for i in range(1, 11)]\nprint(list(map(sqrs, lst)))\n</code></pre>","text":""},{"location":"python-practics/Day_11/#question-42","title":"Question 42","text":""},{"location":"python-practics/Day_11/#question_4","title":"Question:","text":"<p>Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].</p>"},{"location":"python-practics/Day_11/#hints_4","title":"Hints:","text":"<p>Use map() to generate a list.Use filter() to filter elements of a list.Use lambda to define anonymous functions.</p> <p>Main Author's Solution: Python 2</p> <pre><code>li = [1,2,3,4,5,6,7,8,9,10]\nevenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))\nprint evenNumbers\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_11/#def-evenx-return-x20-def-squerx-return-xx-li-12345678910-li-mapsquerfilterevenli-first-filters-number-by-even-number-and-the-apply-map-on-the-resultant-elements-printlistli","title":"<pre><code>def even(x):\n    return x%2==0\n\ndef squer(x):\n    return x*x\n\nli = [1,2,3,4,5,6,7,8,9,10]\nli = map(squer,filter(even,li))   # first filters number by even number and the apply map() on the resultant elements\nprint(list(li))\n</code></pre>","text":""},{"location":"python-practics/Day_11/#solution-by-saxenaharsh24-def-evenitem-if-item-2-0-return-item2-lst-i-for-i-in-range1-11-printlistfilterlambda-j-j-is-not-none-listmapeven-lst","title":"<pre><code>\"\"\"\nSolution by: saxenaharsh24\n\"\"\"\ndef even(item):\n    if item % 2 == 0:\n        return item**2\n\n\nlst = [i for i in range(1, 11)]\nprint(list(filter(lambda j: j is not None, list(map(even, lst)))))\n</code></pre>","text":""},{"location":"python-practics/Day_11/#question-43","title":"Question 43","text":""},{"location":"python-practics/Day_11/#question_5","title":"Question:","text":"<p>Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).</p>"},{"location":"python-practics/Day_11/#hints_5","title":"Hints:","text":"<p>Use filter() to filter elements of a list.Use lambda to define anonymous functions.</p> <p>Main Author's Solution: Python 2</p> <pre><code>evenNumbers = filter(lambda x: x%2==0, range(1,21))\nprint evenNumbers\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def even(x):\n    return x%2==0\n\nevenNumbers = filter(even, range(1,21))\nprint(list(evenNumbers))\n</code></pre>"},{"location":"python-practics/Day_12/","title":"Question 44","text":""},{"location":"python-practics/Day_12/#question","title":"Question:","text":"<p>Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).</p>"},{"location":"python-practics/Day_12/#hints","title":"Hints:","text":"<p>Use map() to generate a list. Use lambda to define anonymous functions.</p> <p>Main Author's Solution: Python 2</p> <pre><code>squaredNumbers = map(lambda x: x**2, range(1,21))\nprint squaredNumbers\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def sqr(x):\n    return x*x\n\nsquaredNumbers = list(map(sqr, range(1,21)))\nprint (squaredNumbers)\n</code></pre>"},{"location":"python-practics/Day_12/#question-45","title":"Question 45","text":""},{"location":"python-practics/Day_12/#question_1","title":"Question:","text":"<p>Define a class named American which has a static method called printNationality.</p>"},{"location":"python-practics/Day_12/#hints_1","title":"Hints:","text":"<p>Use @staticmethod decorator to define class static method.There are also two more methods.To know more, go to this link.</p> <p>Main Author's Solution: Python 2</p> <pre><code>class American(object):\n    @staticmethod\n    def printNationality():\n        print \"America\"\n\nanAmerican = American()\nanAmerican.printNationality()\nAmerican.printNationality()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class American():\n    @staticmethod\n    def printNationality():\n        print(\"I am American\")\n\namerican = American()\namerican.printNationality()   # this will not run if @staticmethod does not decorates the function.\n                              # Because the class has no instance.\n\nAmerican.printNationality()   # this will run even though the @staticmethod\n                              # does not decorate printNationality()\n</code></pre>"},{"location":"python-practics/Day_12/#question-46","title":"Question 46","text":""},{"location":"python-practics/Day_12/#question_2","title":"Question:","text":"<p>Define a class named American and its subclass NewYorker.</p>"},{"location":"python-practics/Day_12/#hints_2","title":"Hints:","text":"<p>Use class Subclass(ParentClass) to define a subclass.*</p> <p>Main Author's Solution: Python 2</p> <pre><code>class American(object):\n    pass\n\nclass NewYorker(American):\n    pass\n\nanAmerican = American()\naNewYorker = NewYorker()\nprint anAmerican\nprint aNewYorker\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class American():\n    pass\n\nclass NewYorker(American):\n    pass\n\namerican = American()\nnewyorker = NewYorker()\n\nprint(american)\nprint(newyorker)\n</code></pre>"},{"location":"python-practics/Day_13/","title":"Question 47","text":""},{"location":"python-practics/Day_13/#question","title":"Question","text":"<p>Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area.</p>"},{"location":"python-practics/Day_13/#hints","title":"Hints","text":"<p>Use def methodName(self) to define a method.</p> <p>Main author's Solution: Python 2</p> <pre><code>class Circle(object):\n    def __init__(self, r):\n        self.radius = r\n\n    def area(self):\n        return self.radius**2*3.14\n\naCircle = Circle(2)\nprint aCircle.area()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class Circle():\n    def __init__(self,r):\n        self.radius = r\n\n    def area(self):\n        return 3.1416*(self.radius**2)\n\n\ncircle = Circle(5)\nprint(circle.area())\n</code></pre>"},{"location":"python-practics/Day_13/#question-48","title":"Question 48","text":""},{"location":"python-practics/Day_13/#question_1","title":"Question","text":"<p>Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area.</p>"},{"location":"python-practics/Day_13/#hints_1","title":"Hints","text":"<p>Use def methodName(self) to define a method.</p> <p>Main author's Solution: Python 2</p> <pre><code>class Rectangle(object):\n    def __init__(self, l, w):\n        self.length = l\n        self.width  = w\n\n    def area(self):\n        return self.length*self.width\n\naRectangle = Rectangle(2,10)\nprint aRectangle.area()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class Rectangle():\n    def __init__(self,l,w):\n        self.length = l\n        self.width = w\n\n    def area(self):\n        return self.length*self.width\n\n\nrect = Rectangle(2,4)\nprint(rect.area())\n</code></pre>"},{"location":"python-practics/Day_13/#question-49","title":"Question 49","text":""},{"location":"python-practics/Day_13/#question_2","title":"Question","text":"<p>Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.</p>"},{"location":"python-practics/Day_13/#hints_2","title":"Hints","text":"<p>To override a method in super class, we can define a method with the same name in the super class.</p> <p>Main author's Solution: Python 2</p> <pre><code>class Shape(object):\n    def __init__(self):\n        pass\n\n    def area(self):\n        return 0\n\nclass Square(Shape):\n    def __init__(self, l):\n        Shape.__init__(self)\n        self.length = l\n\n    def area(self):\n        return self.length*self.length\n\naSquare= Square(3)\nprint aSquare.area()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class Shape():\n    def __init__(self):\n        pass\n\n    def area(self):\n        return 0\n\nclass Square(Shape):\n    def __init__(self,length = 0):\n        Shape.__init__(self)\n        self.length = length\n\n    def area(self):\n        return self.length*self.length\n\nAsqr = Square(5)\nprint(Asqr.area())      # prints 25 as given argument\n\nprint(Square().area())  # prints zero as default area\n</code></pre>"},{"location":"python-practics/Day_13/#question-50","title":"Question 50","text":""},{"location":"python-practics/Day_13/#question_3","title":"Question","text":"<p>Please raise a RuntimeError exception.</p>"},{"location":"python-practics/Day_13/#hints_3","title":"Hints","text":"<p>UUse raise() to raise an exception.</p> <p>Solution:</p> <pre><code>raise RuntimeError('something wrong')\n</code></pre>"},{"location":"python-practics/Day_13/#conclusion","title":"Conclusion","text":"<p>Well It seems that the above problems are very much focused on basic concpets and implimantation of object oriented programming.As the concepts are not about to solve any functional problem rather design the structure , so both codes are very much similar in there implimantation part.</p>"},{"location":"python-practics/Day_14/","title":"Question 51","text":""},{"location":"python-practics/Day_14/#question","title":"Question","text":"<p>Write a function to compute 5/0 and use try/except to catch the exceptions.</p>"},{"location":"python-practics/Day_14/#hints","title":"Hints","text":"<p>Use try/except to catch exceptions.</p> <p>Main author's Solution: Python 2 <pre><code>def throws():\n    return 5/0\n\ntry:\n    throws()\nexcept ZeroDivisionError:\n    print \"division by zero!\"\nexcept Exception, err:\n    print 'Caught an exception'\nfinally:\n    print 'In finally block for cleanup'\n</code></pre></p> <p>My Solution: Python 3 <pre><code>def divide():\n    return 5/0\n\ntry:\n    divide()\nexcept ZeroDivisionError as ze:\n    print(\"Why on earth you are dividing a number by ZERO!!\")\nexcept:\n    print(\"Any other exception\")\n</code></pre></p>"},{"location":"python-practics/Day_14/#question-52","title":"Question 52","text":""},{"location":"python-practics/Day_14/#question_1","title":"Question","text":"<p>Define a custom exception class which takes a string message as attribute.</p>"},{"location":"python-practics/Day_14/#hints_1","title":"Hints","text":"<p>To define a custom exception, we need to define a class inherited from Exception.</p> <p>Main author's Solution: Python 2 <pre><code>class MyError(Exception):\n    \"\"\"My own exception class\n\n    Attributes:\n        msg  -- explanation of the error\n    \"\"\"\n\n    def __init__(self, msg):\n        self.msg = msg\n\nerror = MyError(\"something wrong\")\n</code></pre></p> <p>My Solution: Python 3 <pre><code>class CustomException(Exception):\n    \"\"\"Exception raised for custom purpose\n\n    Attributes:\n        message -- explanation of the error\n    \"\"\"\n\n    def __init__(self, message):\n        self.message = message\n\n\nnum = int(input())\n\ntry:\n    if num &lt; 10:\n        raise CustomException(\"Input is less than 10\")\n    elif num &gt; 10:\n        raise CustomException(\"Input is grater than 10\")\nexcept CustomException as ce:\n    print(\"The error raised: \" + ce.message)\n</code></pre></p>"},{"location":"python-practics/Day_14/#question-53","title":"Question 53","text":""},{"location":"python-practics/Day_14/#question_2","title":"Question","text":"<p>Assuming that we have some email addresses in the \"username@companyname.com\" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.</p> <p>Example: If the following email address is given as input to the  program: <pre><code>john@google.com\n</code></pre> Then, the output of the program should be: <pre><code>john\n</code></pre> In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_14/#hints_2","title":"Hints","text":"<p>Use \\w to match letters.</p> <p>Main author's Solution: Python 2 <pre><code>import re\nemailAddress = raw_input()\npat2 = \"(\\w+)@((\\w+\\.)+(com))\"\nr2 = re.match(pat2,emailAddress)\nprint r2.group(1)\n</code></pre></p> <p>My Solution: Python 3 <pre><code>email = \"john@google.com\"\nemail = email.split('@')\nprint(email[0])\n</code></pre></p> <p>OR <pre><code>import re\n\nemail = \"john@google.com elise@python.com\"\npattern = \"(\\w+)@\\w+.com\"\nans = re.findall(pattern,email)\nprint(ans)\n</code></pre></p>"},{"location":"python-practics/Day_15/","title":"Question 54","text":""},{"location":"python-practics/Day_15/#question","title":"Question","text":"<p>Assuming that we have some email addresses in the \"username@companyname.com\" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.</p> <p>Example: If the following email address is given as input to the program:</p> <pre><code>john@google.com\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>google\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_15/#hints","title":"Hints","text":"<p>Use \\w to match letters.</p> <p>Main author's Solution: Python 2</p> <pre><code>import re\nemailAddress = raw_input()\npat2 = \"(\\w+)@(\\w+)\\.(com)\"\nr2 = re.match(pat2,emailAddress)\nprint r2.group(2)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import re\n\nemail = \"john@google.com elise@python.com\"\npattern = \"\\w+@(\\w+).com\"\nans = re.findall(pattern,email)\nprint(ans)\n</code></pre>"},{"location":"python-practics/Day_15/#question-55","title":"Question 55","text":""},{"location":"python-practics/Day_15/#question_1","title":"Question","text":"<p>Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.</p> <p>Example: If the following words is given as input to the program:</p> <pre><code>2 cats and 3 dogs.\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>['2', '3']\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_15/#hints_1","title":"Hints","text":"<p>Use re.findall() to find all substring using regex.</p> <p>Main author's Solution: Python 2</p> <pre><code>import re\ns = raw_input()\nprint re.findall(\"\\d+\",s)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import re\n\nemail = input()\npattern = \"\\d+\"\nans = re.findall(pattern,email)\nprint(ans)\n</code></pre> <p>OR</p> <pre><code>email = input().split()\nans = []\nfor word in email:\n    if word.isdigit():     # can also use isnumeric() / isdecimal() function instead\n       ans.append(word)\nprint(ans)\n</code></pre> <p>OR</p> <pre><code>email = input().split()\nans = [word for word in email if word.isdigit()]  # using list comprehension method\nprint(ans)\n</code></pre>"},{"location":"python-practics/Day_15/#question-56","title":"Question 56","text":""},{"location":"python-practics/Day_15/#question_2","title":"Question","text":"<p>Print a unicode string \"hello world\".</p>"},{"location":"python-practics/Day_15/#hints_2","title":"Hints","text":"<p>Use u'strings' format to define unicode string.</p> <p>Main author's Solution: Python 2</p> <pre><code>unicodeString = u\"hello world!\"\nprint unicodeString\n</code></pre>"},{"location":"python-practics/Day_15/#question-57","title":"Question 57","text":""},{"location":"python-practics/Day_15/#question_3","title":"Question","text":"<p>Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.</p>"},{"location":"python-practics/Day_15/#hints_3","title":"Hints","text":"<p>Use unicode()/encode() function to convert.</p> <p>Main author's Solution: Python 2</p> <pre><code>s = raw_input()\nu = unicode( s ,\"utf-8\")\nprint u\n</code></pre> <p>My Solution: Python 3</p> <pre><code>s = input()\nu = s.encode('utf-8')\nprint(u)\n</code></pre>"},{"location":"python-practics/Day_15/#question-58","title":"Question 58","text":""},{"location":"python-practics/Day_15/#question_4","title":"Question","text":"<p>Write a special comment to indicate a Python source code file is in unicode.</p>"},{"location":"python-practics/Day_15/#hints_4","title":"Hints","text":"<p>Use unicode() function to convert.</p> <p>Solution:</p> <pre><code># -*- coding: utf-8 -*-\n</code></pre>"},{"location":"python-practics/Day_15/#question-59","title":"Question 59","text":""},{"location":"python-practics/Day_15/#question_5","title":"Question","text":"<p>Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n&gt;0).</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>5\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>3.55\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_15/#hints_5","title":"Hints","text":"<p>Use float() to convert an integer to a float.Even if not converted it wont cause a problem because python by default understands the data type of a value</p> <p>Main author's Solution: Python 2</p> <pre><code>n=int(raw_input())\nsum=0.0\nfor i in range(1,n+1):\n    sum += float(float(i)/(i+1))\nprint sum\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_15/#n-intinput-sum-0-for-i-in-range1-n1-sum-ii1-printroundsum-2-rounded-to-2-decimal-point","title":"<pre><code>n = int(input())\nsum = 0\nfor i in range(1, n+1):\n    sum+= i/(i+1)\nprint(round(sum, 2))  # rounded to 2 decimal point\n</code></pre>","text":""},{"location":"python-practics/Day_15/#solution-by-lcastrooliveira-def-question_59n-printroundsummaplambda-x-xx1-range1-n1-2-question_595","title":"<pre><code>'''Solution by: lcastrooliveira\n'''\ndef question_59(n):\n    print(round(sum(map(lambda x: x/(x+1), range(1, n+1))), 2))\n\nquestion_59(5)\n</code></pre>","text":""},{"location":"python-practics/Day_16/","title":"Question 60","text":""},{"location":"python-practics/Day_16/#question","title":"Question","text":"<p>Write a program to compute:</p> <pre><code>f(n)=f(n-1)+100 when n&gt;0\nand f(0)=0\n</code></pre> <p>with a given n input by console (n&gt;0).</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>5\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>500\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_16/#hints","title":"Hints","text":"<p>We can define recursive function in Python.</p> <p>Main author's Solution: Python 2</p> <pre><code>def f(n):\n    if n==0:\n        return 0\n    else:\n        return f(n-1)+100\n\nn=int(raw_input())\nprint f(n)\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_16/#def-fn-if-n-0-return-0-return-fn-1-100-n-intinput-printfn","title":"<pre><code>def f(n):\n    if n == 0:\n        return 0\n    return f(n-1) + 100\n\nn = int(input())\nprint(f(n))\n</code></pre>","text":"<pre><code>'''Solution by: NikolayEm\n'''\n\nn = int(input())\nf = lambda x: f(x-1)+100 if x &gt; 0 else 0\nprint(f(n))\n</code></pre>"},{"location":"python-practics/Day_16/#question-61","title":"Question 61","text":""},{"location":"python-practics/Day_16/#question_1","title":"Question","text":"<p>The Fibonacci Sequence is computed based on the following formula:</p> <pre><code>f(n)=0 if n=0\nf(n)=1 if n=1\nf(n)=f(n-1)+f(n-2) if n&gt;1\n</code></pre> <p>Please write a program to compute the value of f(n) with a given n input by console.</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>7\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>13\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_16/#hints_1","title":"Hints","text":"<p>We can define recursive function in Python.</p> <p>Main author's Solution: Python 2</p> <pre><code>def f(n):\n    if n == 0: return 0\n    elif n == 1: return 1\n    else: return f(n-1)+f(n-2)\n\nn=int(raw_input())\nprint f(n)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def f(n):\n    if n &lt; 2:\n        return n\n    return f(n-1) + f(n-2)\n\nn = int(input())\nprint(f(n))\n</code></pre>"},{"location":"python-practics/Day_16/#solution-by-nikolayem-n-intinput-f-lambda-x-0-if-x-0-else-1-if-x-1-else-fx-1fx-2-printjoinstrfx-for-x-in-range0-n1","title":"<pre><code>'''Solution by: NikolayEm\n'''\n\nn = int(input())\nf = lambda x: 0 if x == 0 else 1 if x == 1 else f(x-1)+f(x-2)\nprint(','.join([str(f(x)) for x in range(0, n+1)]))\n</code></pre>","text":""},{"location":"python-practics/Day_16/#question-62","title":"Question 62","text":""},{"location":"python-practics/Day_16/#question_2","title":"Question","text":"<p>The Fibonacci Sequence is computed based on the following formula:</p> <pre><code>f(n)=0 if n=0\nf(n)=1 if n=1\nf(n)=f(n-1)+f(n-2) if n&gt;1\n</code></pre> <p>Please write a program to compute the value of f(n) with a given n input by console.</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>7\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>0,1,1,2,3,5,8,13\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_16/#hints_2","title":"Hints","text":"<p>We can define recursive function in Python. Use list comprehension to generate a list from an existing list. Use string.join() to join a list of strings.</p> <p>Main author's Solution: Python 2</p> <pre><code>def f(n):\n    if n == 0: return 0\n    elif n == 1: return 1\n    else: return f(n-1)+f(n-2)\n\nn=int(raw_input())\nvalues = [str(f(x)) for x in range(0, n+1)]\nprint \",\".join(values)\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_16/#def-fn-if-n-2-fibon-n-return-fibon-fibon-fn-1-fn-2-return-fibon-n-intinput-fibo-0n1-initialize-a-list-of-size-n1-fn-call-once-and-it-will-set-value-to-fibo0-n-fibo-stri-for-i-in-fibo-converting-integer-data-to-string-type-ans-joinfibo-joining-all-string-element-of-fibo-with-character-printans","title":"<pre><code>def f(n):\n    if n &lt; 2:\n        fibo[n] = n\n        return fibo[n]\n    fibo[n] = f(n-1) + f(n-2)\n    return fibo[n]\n\nn = int(input())\nfibo = [0]*(n+1)  # initialize a list of size (n+1)\nf(n)              # call once and it will set value to fibo[0-n]\nfibo = [str(i) for i in fibo]   # converting integer data to string type\nans = \",\".join(fibo)    # joining all string element of fibo with ',' character\nprint(ans)\n</code></pre>","text":""},{"location":"python-practics/Day_16/#solution-by-popomaticbubble-def-fibon-if-n-2-return-n-return-fibon-1fibon-2-def-print_fiblistn-fib_list-strfiboi-for-i-in-range0-n1-return-printjoinfib_list-n-intinput-print_fiblistn","title":"<pre><code>'''Solution by: popomaticbubble\n'''\ndef fibo(n):\n    if n &lt; 2: return n\n    return fibo(n-1)+fibo(n-2)\n\ndef print_fiblist(n):\n    fib_list = [(str(fibo(i))) for i in range(0, n+1)]\n    return print(\",\".join(fib_list))\nn = int(input())\nprint_fiblist(n)\n</code></pre>","text":""},{"location":"python-practics/Day_16/#solution-by-lcastrooliveira-def-question_62n-if-n-0-return-0-if-n-1-return-0-1-sequence-0-1-a-b-0-1-for-x-in-range2-n1-c-a-b-sequenceappendc-a-b-b-c-return-sequence-printquestion_6210","title":"<pre><code>'''Solution by: lcastrooliveira\n'''\n\ndef question_62(n):\n    if n == 0:\n        return [0]\n    if n == 1:\n        return [0, 1]\n    sequence = [0, 1]\n    a, b = 0, 1\n    for x in range(2, n+1):\n        c = a + b\n        sequence.append(c)\n        a = b\n        b = c\n    return sequence\n\nprint(question_62(10))\n</code></pre>","text":""},{"location":"python-practics/Day_16/#question-63","title":"Question 63","text":""},{"location":"python-practics/Day_16/#question_3","title":"Question","text":"<p>Please write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>10\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>0,2,4,6,8,10\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_16/#hints_3","title":"Hints","text":"<p>Use yield to produce the next value in generator.</p> <p>Solution:</p> <pre><code>def EvenGenerator(n):\n    i=0\n    while i&lt;=n:\n        if i%2==0:\n            yield i\n        i+=1\n\n\nn=int(raw_input())\nvalues = []\nfor i in EvenGenerator(n):\n    values.append(str(i))\n\nprint \",\".join(values)\n</code></pre> <p>OR</p> <pre><code># Solution by: StartZer0\nn = int(input())\n\nfor i in range(0, n+1, 2):\n  if i &lt; n - 1:\n    print(i, end = ',' )\n  else:\n    print(i)\n</code></pre>"},{"location":"python-practics/Day_16/#question-64","title":"Question 64","text":""},{"location":"python-practics/Day_16/#question_4","title":"Question","text":"<p>Please write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>100\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>0,35,70\n</code></pre> <p>In case of input data being supplied to the question, it should be assumed to be a console input.</p>"},{"location":"python-practics/Day_16/#hints_4","title":"Hints","text":"<p>Use yield to produce the next value in generator.</p> <p>Main author's Solution: Python 2</p> <pre><code>def NumGenerator(n):\n    for i in range(n+1):\n        if i%5==0 and i%7==0:\n            yield i\n\nn=int(raw_input())\nvalues = []\nfor i in NumGenerator(n):\n    values.append(str(i))\n\nprint \",\".join(values)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def generate(n):\n    for i in range(n+1):\n        if i % 35 == 0:    # 5*7 = 35, if a number is divisible by a &amp; b then it is also divisible by a*b\n            yield i\n\nn = int(input())\nresp = [str(i) for i in generate(n)]\nprint(\",\".join(resp))\n</code></pre>"},{"location":"python-practics/Day_17/","title":"Question 65","text":""},{"location":"python-practics/Day_17/#question","title":"Question","text":"<p>Please write assert statements to verify that every number in the list [2,4,6,8] is even.</p>"},{"location":"python-practics/Day_17/#hints","title":"Hints","text":"<p>Use \"assert expression\" to make assertion.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [2,4,6,8]\nfor i in li:\n    assert i%2==0\n</code></pre> <p>My Solution: Python 3</p> <pre><code>data = [2,4,5,6]\nfor i in data:\n    assert i%2 == 0, \"{} is not an even number\".format(i)\n</code></pre>"},{"location":"python-practics/Day_17/#question-66","title":"Question 66","text":""},{"location":"python-practics/Day_17/#question_1","title":"Question","text":"<p>Please write a program which accepts basic mathematic expression from console and print the evaluation result.</p> <p>Example: If the following n is given as input to the program:</p> <pre><code>35 + 3\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>38\n</code></pre>"},{"location":"python-practics/Day_17/#hints_1","title":"Hints","text":"<p>Use eval() to evaluate an expression.</p> <p>Main author's Solution: Python 2</p> <pre><code>expression = raw_input()\nprint eval(expression)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>expression = input()\nans = eval(expression)\nprint(ans)\n</code></pre>"},{"location":"python-practics/Day_17/#question-67","title":"Question 67","text":""},{"location":"python-practics/Day_17/#question_2","title":"Question","text":"<p>Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.</p>"},{"location":"python-practics/Day_17/#hints_2","title":"Hints","text":"<p>Use if/elif to deal with conditions.</p> <p>Main author's Solution: Python 2</p> <pre><code>import math\ndef bin_search(li, element):\n    bottom = 0\n    top = len(li)-1\n    index = -1\n    while top&gt;=bottom and index==-1:\n        mid = int(math.floor((top+bottom)/2.0))\n        if li[mid]==element:\n            index = mid\n        elif li[mid]&gt;element:\n            top = mid-1\n        else:\n            bottom = mid+1\n\n    return index\n\nli=[2,5,7,9,11,17,222]\nprint bin_search(li,11)\nprint bin_search(li,12)\n</code></pre> <p>My Solution: Python 3</p> <p><pre><code>#to be written\n</code></pre> Solution by ulmasovjafarbek: Python 3 <pre><code>def binary_search(lst, item):\n    low = 0\n    high = len(lst) - 1\n\n    while low &lt;= high:\n        mid = round((low + high) / 2)\n\n        if lst[mid] == item:\n            return mid\n        elif lst[mid] &gt; item:\n            high = mid - 1\n        else:\n            low = mid + 1\n    return None\n\nlst = [1,3,5,7,]\nprint(binary_search(lst, 9))   \n</code></pre></p> <p>Solution by AasaiAlangaram: Python 3</p> <pre><code>def binary_search_Ascending(array, target):\n    lower = 0\n    upper = len(array)\n    print('Array Length:',upper)\n    while lower &lt; upper:\n        x = (lower + upper) // 2\n        print('Middle Value:',x)\n        value = array[x]\n        if target == value:\n            return x\n        elif target &gt; value:\n            lower = x\n        elif target &lt; value:\n            upper = x\n\nArray = [1,5,8,10,12,13,55,66,73,78,82,85,88,99]\nprint('The Value Found at Index:',binary_search_Ascending(Array, 82))\n</code></pre> <p>Solution by yuan1z: Python 3</p> <pre><code>idx = 0\ndef bs(num,num_list):\n    global idx\n    if (len(num_list) == 1):\n        if num_list[0] == num:\n            return idx\n        else:\n            return \"No exit in the list\"\n    elif num in num_list[:len(num_list)//2]:\n        return bs(num,num_list[:len(num_list)//2])\n    else:\n        idx += len(num_list)//2\n    return bs(num,num_list[len(num_list)//2:])\n\nprint(bs(66,[1,5,8,10,12,13,55,66,73,78,82,85,88,99,100]))\n</code></pre>"},{"location":"python-practics/Day_17/#question-68","title":"Question 68","text":""},{"location":"python-practics/Day_17/#question_3","title":"Question","text":"<p>Please generate a random float where the value is between 10 and 100 using Python module.</p>"},{"location":"python-practics/Day_17/#hints_3","title":"Hints","text":"<p>Use random.random() to generate a random float in [0,1].</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.random()*100\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nrand_num = random.uniform(10,100)\nprint(rand_num)\n</code></pre>"},{"location":"python-practics/Day_17/#question-69","title":"Question 69","text":""},{"location":"python-practics/Day_17/#question_4","title":"Question","text":"<p>Please generate a random float where the value is between 5 and 95 using Python module.</p>"},{"location":"python-practics/Day_17/#hints_4","title":"Hints","text":"<p>Use random.random() to generate a random float in [0,1].</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.random()*100-5\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nrand_num = random.uniform(5,95)\nprint(rand_num)\n</code></pre>"},{"location":"python-practics/Day_18/","title":"Question 70","text":""},{"location":"python-practics/Day_18/#question","title":"Question","text":"<p>Please write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.</p>"},{"location":"python-practics/Day_18/#hints","title":"Hints","text":"<p>Use random.choice() to a random element from a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [2,4,6,8]\nimport random\nprint random.choice([i for i in range(11) if i%2==0])\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nresp = [i for i in range(0,11,2)]\nprint(random.choice(resp))\n</code></pre>"},{"location":"python-practics/Day_18/#question-71","title":"Question 71","text":""},{"location":"python-practics/Day_18/#question_1","title":"Question","text":"<p>Please write a program to output a random number, which is divisible by 5 and 7, between 10 and 150 inclusive using random module and list comprehension.</p>"},{"location":"python-practics/Day_18/#hints_1","title":"Hints","text":"<p>Use random.choice() to a random element from a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.choice([i for i in range(10,151) if i%5==0 and i%7==0])\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nresp = [i for i in range(10,151) if i % 35 == 0 ]\nprint(random.choice(resp))\n</code></pre>"},{"location":"python-practics/Day_18/#question-72","title":"Question 72","text":""},{"location":"python-practics/Day_18/#question_2","title":"Question","text":"<p>Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.</p>"},{"location":"python-practics/Day_18/#hints_2","title":"Hints","text":"<p>Use random.sample() to generate a list of random values.</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.sample(range(100,201), 5)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nresp = random.sample(range(100,201),5)\nprint(resp)\n</code></pre>"},{"location":"python-practics/Day_18/#question-73","title":"Question 73","text":""},{"location":"python-practics/Day_18/#question_3","title":"Question","text":"<p>Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.</p>"},{"location":"python-practics/Day_18/#hints_3","title":"Hints","text":"<p>Use random.sample() to generate a list of random values.</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.sample([i for i in range(100,201) if i%2==0], 5)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nresp = random.sample(range(100,201,2),5)\nprint(resp)\n</code></pre>"},{"location":"python-practics/Day_18/#question-74","title":"Question 74","text":""},{"location":"python-practics/Day_18/#question_4","title":"Question","text":"<p>Please write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.</p>"},{"location":"python-practics/Day_18/#hints_4","title":"Hints","text":"<p>Use random.sample() to generate a list of random values.</p> <p>Main author's Solution: Python 2</p> <pre><code>import random\nprint random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\nlst = [i for i in range(1,1001) if i%35 == 0]\nresp = random.sample(lst,5)\nprint(resp)\n</code></pre>"},{"location":"python-practics/Day_19/","title":"Question 75","text":""},{"location":"python-practics/Day_19/#question","title":"Question","text":"<p>Please write a program to randomly print a integer number between 7 and 15 inclusive.</p>"},{"location":"python-practics/Day_19/#hints","title":"Hints","text":"<p>Use random.randrange() to a random integer in a given range.</p> <p>Solution:</p> <pre><code>import random\nprint random.randrange(7,16)\n</code></pre>"},{"location":"python-practics/Day_19/#question-76","title":"Question 76","text":""},{"location":"python-practics/Day_19/#question_1","title":"Question","text":"<p>Please write a program to compress and decompress the string \"hello world!hello world!hello world!hello world!\".</p>"},{"location":"python-practics/Day_19/#hints_1","title":"Hints","text":"<p>Use zlib.compress() and zlib.decompress() to compress and decompress a string.</p> <p>Solution:</p>"},{"location":"python-practics/Day_19/#import-zlib-s-hello-worldhello-worldhello-worldhello-world-t-zlibcompresss-print-t-print-zlibdecompresst","title":"<pre><code>import zlib\ns = 'hello world!hello world!hello world!hello world!'\nt = zlib.compress(s)\nprint t\nprint zlib.decompress(t)\n</code></pre>","text":""},{"location":"python-practics/Day_19/#solution-by-anas1434-s-hello-worldhello-worldhello-worldhello-world-in-python-3-zlibcompress-accepts-only-datatype-bytes-y-bytess-utf-8-x-zlibcompressy-printx-printzlibdecompressx","title":"<pre><code>'''Solution by: anas1434 \n'''\ns = 'hello world!hello world!hello world!hello world!'\n# In Python 3 zlib.compress() accepts only DataType &lt;bytes&gt;\ny = bytes(s, 'utf-8')\nx = zlib.compress(y)\nprint(x)\nprint(zlib.decompress(x))\n</code></pre>","text":""},{"location":"python-practics/Day_19/#question-77","title":"Question 77","text":""},{"location":"python-practics/Day_19/#question_2","title":"Question","text":"<p>Please write a program to print the running time of execution of \"1+1\" for 100 times.</p>"},{"location":"python-practics/Day_19/#hints_2","title":"Hints","text":"<p>Use timeit() function to measure the running time.</p> <p>Main author's Solution: Python 2</p> <pre><code>from timeit import Timer\nt = Timer(\"for i in range(100):1+1\")\nprint t.timeit()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import datetime\n\nbefore = datetime.datetime.now()\nfor i in range(100):\n    x = 1 + 1\nafter = datetime.datetime.now()\nexecution_time = after - before\nprint(execution_time.microseconds)\n</code></pre> <p>OR</p> <pre><code>import time\n\nbefore = time.time()\nfor i in range(100):\n    x = 1 + 1\nafter = time.time()\nexecution_time = after - before\nprint(execution_time)\n</code></pre>"},{"location":"python-practics/Day_19/#question-78","title":"Question 78","text":""},{"location":"python-practics/Day_19/#question_3","title":"Question","text":"<p>Please write a program to shuffle and print the list [3,6,7,8].</p>"},{"location":"python-practics/Day_19/#hints_3","title":"Hints","text":"<p>Use shuffle() function to shuffle a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>from random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint li\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import random\n\nlst = [3,6,7,8]\nrandom.shuffle(lst)\nprint(lst)\n</code></pre> <p>OR</p> <pre><code>import random\n\n# shuffle with a chosen seed\nlst = [3,6,7,8]\nseed = 7\nrandom.Random(seed).shuffle(lst)\nprint(lst)\n</code></pre>"},{"location":"python-practics/Day_19/#question-79","title":"Question 79","text":""},{"location":"python-practics/Day_19/#question_4","title":"Question","text":"<p>Please write a program to generate all sentences where subject is in [\"I\", \"You\"] and verb is in [\"Play\", \"Love\"] and the object is in [\"Hockey\",\"Football\"].</p>"},{"location":"python-practics/Day_19/#hints_4","title":"Hints","text":"<p>Use list[index] notation to get a element from a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>subjects=[\"I\", \"You\"]\nverbs=[\"Play\", \"Love\"]\nobjects=[\"Hockey\",\"Football\"]\nfor i in range(len(subjects)):\n    for j in range(len(verbs)):\n        for k in range(len(objects)):\n            sentence = \"%s %s %s.\" % (subjects[i], verbs[j], objects[k])\n            print sentence\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_19/#subjectsi-you-verbsplay-love-objectshockeyfootball-for-sub-in-subjects-for-verb-in-verbs-for-obj-in-objects-print-formatsubverbobj","title":"<pre><code>subjects=[\"I\", \"You\"]\nverbs=[\"Play\", \"Love\"]\nobjects=[\"Hockey\",\"Football\"]\n\nfor sub in subjects:\n    for verb in verbs:\n        for obj in objects:\n            print(\"{} {} {}\".format(sub,verb,obj))\n</code></pre>","text":""},{"location":"python-practics/Day_19/#solution-by-popomaticbubble-import-itertools-subject-i-you-verb-play-love-objects-hockeyfootball-sentence-subject-verb-objects-n-listitertoolsproductsentence-for-i-in-n-printi","title":"<pre><code>'''Solution by: popomaticbubble\n'''\nimport itertools\nsubject = [\"I\", \"You\"]\nverb = [\"Play\", \"Love\"]\nobjects = [\"Hockey\",\"Football\"]\n\nsentence = [subject, verb, objects]\nn = list(itertools.product(*sentence))\nfor i in n: \n    print(i)\n</code></pre>","text":"<pre><code>'''Solution by: lcastrooliveira\n'''\nfrom itertools import product\n\ndef question_79():\n    subject = [\"I\", \"You\"]\n    verb = [\"Play\", \"Love\"]\n    object = [\"Hockey\", \"Football\"]\n    prod = [p for p in product(range(2), repeat=3)]\n    for combination in prod:\n        print(f'{subject[combination[0]]} {verb[combination[1]]} {object[combination[2]]}')\n\nquestion_79()\n</code></pre>"},{"location":"python-practics/Day_2/","title":"Question 4","text":""},{"location":"python-practics/Day_2/#question","title":"Question:","text":"<p>Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.Suppose the following input is supplied to the program:</p> <pre><code>34,67,55,33,12,98\n</code></pre> <p>Then, the output should be:</p> <pre><code>['34', '67', '55', '33', '12', '98']\n('34', '67', '55', '33', '12', '98')\n</code></pre>"},{"location":"python-practics/Day_2/#hints","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.tuple() method can convert list to tuple</p> <p>Main author's Solution: Python 2</p> <pre><code>values = raw_input()\nl = values.split(\",\")\nt = tuple(l)\nprint l\nprint t\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_2/#lst-inputsplit-the-input-is-being-taken-as-string-and-as-it-is-string-it-has-a-built-in-method-name-split-inside-split-function-does-split-where-it-finds-any-and-save-the-input-as-list-in-lst-variable-tpl-tuplelst-tuple-method-converts-list-to-tuple-printlst-printtpl","title":"<pre><code>lst = input().split(',')  # the input is being taken as string and as it is string it has a built in\n                          # method name split. ',' inside split function does split where it finds any ','\n                          # and save the input as list in lst variable\n\ntpl = tuple(lst)          # tuple method converts list to tuple\n\nprint(lst)\nprint(tpl)\n</code></pre>","text":""},{"location":"python-practics/Day_2/#solution-by-minnielahoti-printtupleinputenter-a-series-of-numbers-separated-by-a-comma-split","title":"<pre><code>'''solution by: minnielahoti\n'''\nprint(tuple(input(\"Enter a series of numbers separated by a comma :\").split(',')))\n</code></pre>","text":""},{"location":"python-practics/Day_2/#question-5","title":"Question 5","text":""},{"location":"python-practics/Day_2/#question_1","title":"Question:","text":"<p>Define a class which has at least two methods:</p> <ul> <li>getString: to get a string from console input</li> <li>printString: to print the string in upper case.</li> </ul> <p>Also please include simple test function to test the class methods.</p>"},{"location":"python-practics/Day_2/#hints_1","title":"Hints:","text":"<p>_Use init method to construct some parameters_</p> <p>Main author's Solution: Python 2</p> <pre><code>class InputOutString(object):\n    def __init__(self):\n        self.s = \"\"\n\n    def get_string(self):\n        self.s = raw_input()\n\n    def print_string(self):\n        print self.s.upper()\n\nstr_obj = InputOutString()\nstr_obj.get_string()\nstr_obj.print_string()\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class IOstring():\n    def get_string(self):\n        self.s = input()\n\n    def print_string(self):\n        print(self.s.upper())\n\nxx = IOstring()\nxx.get_string()\nxx.print_string()\n</code></pre>"},{"location":"python-practics/Day_2/#question-6","title":"Question 6","text":""},{"location":"python-practics/Day_2/#question_2","title":"Question:","text":"<p>Write a program that calculates and prints the value according to the given formula:</p> <p>Q = Square root of [(2 _ C _ D)/H]</p> <p>Following are the fixed values of C and H:</p> <p>C is 50. H is 30.</p> <p>D is the variable whose values should be input to your program in a comma-separated sequence.For example Let us assume the following comma separated input sequence is given to the program:</p> <pre><code>100,150,180\n</code></pre> <p>The output of the program should be:</p> <pre><code>18,22,24\n</code></pre>"},{"location":"python-practics/Day_2/#hints_2","title":"Hints:","text":"<p>If the output received is in decimal form, it should be rounded off to its nearest value (for example, if the output received is 26.0, it should be printed as 26).In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>import math\nc = 50\nh = 30\nvalue = []\nitems = [x for x in raw_input().split(',')]\nfor d in items:\n    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))\n\nprint ','.join(value)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>from math import sqrt # import specific functions as importing all using *\n                      # is bad practice\n\nC,H = 50,30\n\ndef calc(D):\n    return sqrt((2*C*D)/H)\n\nD = [int(i) for i in input().split(',')] # splits in comma position and set up in list\nD = [int(i) for i in D]   # converts string to integer\nD = [calc(i) for i in D]  # returns floating value by calc method for every item in D\nD = [round(i) for i in D] # All the floating values are rounded\nD = [str(i) for i in D]   # All the integers are converted to string to be able to apply join operation\n\nprint(\",\".join(D))\n</code></pre> <p>OR</p> <pre><code>from math import sqrt\n\nC,H = 50,30\n\ndef calc(D):\n    return sqrt((2*C*D)/H)\n\nD = input().split(',')                     # splits in comma position and set up in list\nD = [str(round(calc(int(i)))) for i in D]  # using comprehension method. It works in order of the previous code\nprint(\",\".join(D))\n</code></pre> <p>OR</p> <pre><code>from math import sqrt\nC,H = 50,30\n\ndef calc(D):\n    return sqrt((2*C*D)/H)\n\nprint(\",\".join([str(int(calc(int(i)))) for i in input().split(',')]))\n</code></pre> <p>OR</p>"},{"location":"python-practics/Day_2/#from-math-import-importing-all-math-functions-ch-5030-def-calcd-d-intd-return-strintsqrt2cdh-d-inputsplit-d-listmapcalcd-applying-calc-function-on-d-and-storing-as-a-list-printjoind","title":"<pre><code>from math import * # importing all math functions\nC,H = 50,30\n\ndef calc(D):\n    D = int(D)\n    return str(int(sqrt((2*C*D)/H)))\n\nD = input().split(',')\nD = list(map(calc,D))   # applying calc function on D and storing as a list\nprint(\",\".join(D))\n</code></pre>","text":""},{"location":"python-practics/Day_2/#solution-by-parian5-from-math-import-sqrt-c-h-50-30-mylist-inputsplit-printroundsqrt2cintdh-for-d-in-mylist-sep","title":"<pre><code>'''Solution by: parian5\n'''\nfrom math import sqrt\nC, H = 50, 30\nmylist = input().split(',')\nprint(*(round(sqrt(2*C*int(D)/H)) for D in mylist), sep=\",\")\n</code></pre>","text":""},{"location":"python-practics/Day_2/#solution-by-saxenaharsh24-my_list-intx-for-x-in-inputsplit-c-h-x-50-30-for-d-in-my_list-q-2cdh12-xappendroundq-printjoinmapstr-x","title":"<pre><code>'''Solution by: saxenaharsh24\n'''\n\nmy_list = [int(x) for x in input('').split(',')]\nC, H, x = 50, 30, []\n\nfor D in my_list:\n    Q = ((2*C*D)/H)**(1/2)\n    x.append(round(Q))\n\nprint(','.join(map(str, x)))\n</code></pre>","text":""},{"location":"python-practics/Day_2/#question-7","title":"Question 7","text":""},{"location":"python-practics/Day_2/#question_3","title":"Question:","text":"<p>_Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i _ j.*</p> <p>Note: i=0,1.., X-1; j=0,1,\u00a1\u00adY-1. Suppose the following inputs are given to the program: 3,5</p> <p>Then, the output of the program should be:</p> <pre><code>[[0, 0, 0, 0, 0], [0, 1, 2, 3, 4], [0, 2, 4, 6, 8]]\n</code></pre>"},{"location":"python-practics/Day_2/#hints_3","title":"Hints:","text":"<p>Note: In case of input data being supplied to the question, it should be assumed to be a console input in a comma-separated form.</p> <p>Main author's Solution: Python 2</p> <pre><code>input_str = raw_input()\ndimensions = [int(x) for x in input_str.split(',')]\nrow_num = dimensions[0]\ncol_num = dimensions[1]\nmultilist = [[0 for col in range(col_num)] for row in range(row_num)]\n\nfor row in range(row_num):\n    for col in range(col_num):\n        multilist[row][col] = row * col\n\nprint multilist\n</code></pre> <p>My Solution: Python 3</p> <pre><code>x,y = map(int,input().split(','))\nlst = []\n\nfor i in range(x):\n    tmp = []\n    for j in range(y):\n        tmp.append(i*j)\n    lst.append(tmp)\n\nprint(lst)\n</code></pre> <p>OR</p> <pre><code>x,y = map(int,input().split(','))\nlst = [[i*j for j in range(y)] for i in range(x)]\nprint(lst)\n</code></pre>"},{"location":"python-practics/Day_2/#question-8","title":"Question 8","text":""},{"location":"python-practics/Day_2/#question_4","title":"Question:","text":"<p>Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>without,hello,bag,world\n</code></pre> <p>Then, the output should be:</p> <pre><code>bag,hello,without,world\n</code></pre>"},{"location":"python-practics/Day_2/#hints_4","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>items = [x for x in raw_input().split(',')]\nitems.sort()\nprint ','.join(items)\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_2/#lst-inputsplit-lstsort-printjoinlst","title":"<pre><code>lst = input().split(',')\nlst.sort()\nprint(\",\".join(lst))\n</code></pre>","text":"<pre><code>'''Solution by Poonam-glitch\n'''\ndef my_func(e):\n    return e[0]\n\nmy_list = input('Enter a comma separated string: ').split(\",\")\nmy_list.sort(key=my_func)\nprint(\",\".join(my_list))\n</code></pre>"},{"location":"python-practics/Day_2/#question-9","title":"Question 9","text":""},{"location":"python-practics/Day_2/#question_5","title":"Question:","text":"<p>Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>Hello world\nPractice makes perfect\n</code></pre> <p>Then, the output should be:</p> <pre><code>HELLO WORLD\nPRACTICE MAKES PERFECT\n</code></pre>"},{"location":"python-practics/Day_2/#hints_5","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>lines = []\nwhile True:\n    s = raw_input()\n    if s:\n        lines.append(s.upper())\n    else:\n        break\n\nfor sentence in lines:\n    print sentence\n</code></pre> <p>My Solution: Python 3</p> <pre><code>lst = []\n\nwhile True:\n    x = input()\n    if len(x)==0:\n        break\n    lst.append(x.upper())\n\nfor line in lst:\n    print(line)\n</code></pre> <p>OR</p> <pre><code>def user_input():\n    while True:\n        s = input()\n        if not s:\n            return\n        yield s\n\nfor line in map(str.upper, user_input()):\n    print(line)\n</code></pre> <pre><code>'''Soltuion by: hajimalung baba\n'''\ndef inputs():\n    while True:\n        string = input()\n        if not string:\n            return\n        yield string\n\nprint(*(line.upper() for line in inputs()),sep='\\n')\n</code></pre>"},{"location":"python-practics/Day_20/","title":"Question 80","text":""},{"location":"python-practics/Day_20/#question","title":"Question","text":"<p>Please write a program to print the list after removing even numbers in [5,6,77,45,22,12,24].</p>"},{"location":"python-practics/Day_20/#hints","title":"Hints","text":"<p>Use list comprehension to delete a bunch of element from a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [5,6,77,45,22,12,24]\nli = [x for x in li if x%2!=0]\nprint li\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def isEven(n):\n    return n%2!=0\n\nli = [5,6,77,45,22,12,24]\nlst = list(filter(isEven,li))\nprint(lst)\n</code></pre> <p>OR</p> <pre><code>li = [5,6,77,45,22,12,24]\nlst = list(filter(lambda n:n%2!=0,li))\nprint(lst)\n</code></pre>"},{"location":"python-practics/Day_20/#question-81","title":"Question 81","text":""},{"location":"python-practics/Day_20/#question_1","title":"Question","text":"<p>By using list comprehension, please write a program to print the list after removing numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].</p>"},{"location":"python-practics/Day_20/#hints_1","title":"Hints","text":"<p>Use list comprehension to delete a bunch of element from a list.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [12,24,35,70,88,120,155]\nli = [x for x in li if x%5!=0 and x%7!=0]\nprint li\n</code></pre> <p>My Solution: Python 3</p> <pre><code>li = [12,24,35,70,88,120,155]\nli = [x for x in li if x % 35!=0]\nprint(li)\n</code></pre>"},{"location":"python-practics/Day_20/#question-82","title":"Question 82","text":""},{"location":"python-practics/Day_20/#question_2","title":"Question","text":"<p>By using list comprehension, please write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].</p>"},{"location":"python-practics/Day_20/#hints_2","title":"Hints","text":"<p>Use list comprehension to delete a bunch of element from a list. Use enumerate() to get (index, value) tuple.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i%2 != 0 and i &lt;= 6]\nprint li\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_20/#li-1224357088120155-li-lii-for-i-in-rangelenli-if-i2-0-and-i-6-printli","title":"<pre><code>li = [12,24,35,70,88,120,155]\nli = [li[i] for i in range(len(li)) if i%2 != 0 and i &lt;= 6]\nprint(li)\n</code></pre>","text":""},{"location":"python-practics/Day_20/#solution-by-popomaticbubble-orig_lst-1224357088120155-indices-0-2-4-6-new_list-i-for-j-i-in-enumerateorig_lst-if-j-not-in-indices-printnew_list","title":"<pre><code>'''Solution by: popomaticbubble\n'''\norig_lst = [12,24,35,70,88,120,155]\nindices = [0, 2, 4, 6]\n\nnew_list = [i for (j, i) in enumerate(orig_lst) if j not in indices]\nprint(new_list)\n</code></pre>","text":""},{"location":"python-practics/Day_20/#question-83","title":"Question 83","text":""},{"location":"python-practics/Day_20/#question_3","title":"Question","text":"<p>By using list comprehension, please write a program to print the list after removing the 2nd - 4th numbers in [12,24,35,70,88,120,155].</p>"},{"location":"python-practics/Day_20/#hints_3","title":"Hints","text":"<p>Use list comprehension to delete a bunch of element from a list. Use enumerate() to get (index, value) tuple.</p> <p>Main author's Solution: Python 2</p>"},{"location":"python-practics/Day_20/#li-1224357088120155-li-x-for-ix-in-enumerateli-if-i3-or-4i-print-li","title":"<pre><code>li = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i&lt;3 or 4&lt;i]\nprint li\n</code></pre>","text":"<p>My Solution: Python 3</p>"},{"location":"python-practics/Day_20/#to-be-written-li-1224357088120155-li-lii-for-i-in-rangelenli-if-i-3-or-i-4-printli","title":"<pre><code>#to be written\nli = [12,24,35,70,88,120,155]\nli = [li[i] for i in range(len(li)) if i &lt; 3 or i &gt; 4]\nprint(li)\n</code></pre>","text":""},{"location":"python-practics/Day_20/#solution-by-popomaticbubble-orig_list-1224357088120155-new_list-i-for-j-i-in-enumerateorig_list-if-j-not-in-range14-printnew_list","title":"<pre><code>\"\"\"Solution by: popomaticbubble\n\"\"\"\norig_list = [12,24,35,70,88,120,155]\nnew_list = [i for (j, i) in enumerate(orig_list) if j not in range(1,4)]\nprint(new_list)\n</code></pre>","text":""},{"location":"python-practics/Day_20/#solution-by-saxenaharsh24-lst-1224357088120155-printi-for-i-in-lst-if-lstindexi-not-in-range25","title":"<pre><code>\"\"\"Solution by: saxenaharsh24\n\"\"\"\nlst = [12,24,35,70,88,120,155]\nprint([i for i in lst if lst.index(i) not in range(2,5)])\n</code></pre>","text":""},{"location":"python-practics/Day_20/#question-84","title":"Question 84","text":""},{"location":"python-practics/Day_20/#question_4","title":"Question","text":"<p>By using list comprehension, please write a program generate a 3*5*8 3D array whose each element is 0.</p>"},{"location":"python-practics/Day_20/#hints_4","title":"Hints","text":"<p>Use list comprehension to make an array.</p> <p>Solution:</p> <pre><code>array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]\nprint array\n</code></pre>"},{"location":"python-practics/Day_21/","title":"Question 85","text":""},{"location":"python-practics/Day_21/#question","title":"Question","text":"<p>By using list comprehension, please write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].</p>"},{"location":"python-practics/Day_21/#hints","title":"Hints","text":"<p>Use list comprehension to delete a bunch of element from a list.Use enumerate() to get (index, value) tuple.</p> <p>Main author's Solution: Python 2</p>"},{"location":"python-practics/Day_21/#li-1224357088120155-li-x-for-ix-in-enumerateli-if-i-not-in-045-print-li","title":"<pre><code>li = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i not in (0,4,5)]\nprint li\n</code></pre>","text":"<p>My Solution: Python 3</p>"},{"location":"python-practics/Day_21/#li-1224357088120155-li-lii-for-i-in-rangelenli-if-i-not-in-045-printli","title":"<pre><code>li = [12,24,35,70,88,120,155]\nli = [li[i] for i in range(len(li)) if i not in (0,4,5)]\nprint(li)\n</code></pre>","text":"<pre><code>'''Solution by: pratikb0501\n'''\nli = [12, 24, 35, 70, 88, 120, 155]\nprint(list(j for i, j in enumerate(li) if i != 0 and i != 4 and i != 5))\n</code></pre>"},{"location":"python-practics/Day_21/#question-86","title":"Question 86","text":""},{"location":"python-practics/Day_21/#question_1","title":"Question","text":"<p>By using list comprehension, please write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].</p>"},{"location":"python-practics/Day_21/#hints_1","title":"Hints","text":"<p>Use list's remove method to delete a value.</p> <p>Main author's Solution: Python 2</p> <pre><code>li = [12,24,35,24,88,120,155]\nli = [x for x in li if x!=24]\nprint li\n</code></pre> <p>My Solution: Python 3</p> <pre><code>li = [12,24,35,24,88,120,155]\nli.remove(24)  # this will remove only the first occurrence of 24\nprint(li)\n</code></pre>"},{"location":"python-practics/Day_21/#question-87","title":"Question 87","text":""},{"location":"python-practics/Day_21/#question_2","title":"Question","text":"<p>With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.</p>"},{"location":"python-practics/Day_21/#hints_2","title":"Hints","text":"<p>Use set() and \"&amp;=\" to do set intersection operation.</p> <p>Main author's Solution: Python 2</p> <pre><code>set1=set([1,3,6,78,35,55])\nset2=set([12,24,35,24,88,120,155])\nset1 &amp;= set2\nli=list(set1)\nprint li\n</code></pre> <p>My Solution: Python 3</p> <pre><code>list1 = [1,3,6,78,35,55]\nlist2 = [12,24,35,24,88,120,155]\nset1= set(list1)\nset2= set(list2)\nintersection = set1 &amp; set2\nprint(intersection)\n</code></pre> <p>OR</p> <pre><code>list1 = [1,3,6,78,35,55]\nlist2 = [12,24,35,24,88,120,155]\nset1= set(list1)\nset2= set(list2)\nintersection = set.intersection(set1,set2)\nprint(intersection)\n</code></pre>"},{"location":"python-practics/Day_21/#question-88","title":"Question 88","text":""},{"location":"python-practics/Day_21/#question_3","title":"Question","text":"<p>With a given list [12,24,35,24,88,120,155,88,120,155], write a program to print this list after removing all duplicate values with original order reserved.</p>"},{"location":"python-practics/Day_21/#hints_3","title":"Hints","text":"<p>Use set() to store a number of values without duplicate.</p> <p>Main author's Solution: Python 2</p> <pre><code>def removeDuplicate( li ):\n    newli=[]\n    seen = set()\n    for item in li:\n        if item not in seen:\n            seen.add( item )\n            newli.append(item)\n\n    return newli\n\nli=[12,24,35,24,88,120,155,88,120,155]\nprint removeDuplicate(li)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>li = [12,24,35,24,88,120,155,88,120,155]\nfor i in li:\n    if li.count(i) &gt; 1:\n        li.remove(i)\nprint(li)\n</code></pre> <p>OR</p> <pre><code>def removeDuplicate( li ):\n    seen = {}  # dictionary\n    for item in li:\n        if item not in seen:\n            seen[item] = True\n            yield item\n\nli = [12, 24, 35, 24, 88, 120, 155, 88, 120, 155]\nans = list(removeDuplicate(li))\nprint(ans)\n</code></pre>"},{"location":"python-practics/Day_21/#question-89","title":"Question 89","text":""},{"location":"python-practics/Day_21/#question_4","title":"Question","text":"<p>Define a class Person and its two child classes: Male and Female. All classes have a method \"getGender\" which can print \"Male\" for Male class and \"Female\" for Female class.</p>"},{"location":"python-practics/Day_21/#hints_4","title":"Hints","text":"<p>Use Subclass(Parentclass) to define a child class.</p> <p>Solution:</p>"},{"location":"python-practics/Day_21/#class-personobject-def-getgender-self-return-unknown-class-male-person-def-getgender-self-return-male-class-female-person-def-getgender-self-return-female-amale-male-afemale-female-print-amalegetgender-print-afemalegetgender","title":"<pre><code>class Person(object):\n    def getGender( self ):\n        return \"Unknown\"\n\nclass Male( Person ):\n    def getGender( self ):\n        return \"Male\"\n\nclass Female( Person ):\n    def getGender( self ):\n        return \"Female\"\n\naMale = Male()\naFemale= Female()\nprint aMale.getGender()\nprint aFemale.getGender()\n</code></pre>","text":""},{"location":"python-practics/Day_21/#solution-by-popomaticbubble-class-personobject-def-__init__self-selfgender-unknown-def-getgenderself-printselfgender-class-maleperson-def-__init__self-selfgender-male-class-femaleperson-def-__init__self-selfgender-female-sharon-female-doug-male-sharongetgender-douggetgender","title":"<pre><code>'''Solution by: popomaticbubble\n'''\nclass Person(object):\n    def __init__(self):\n    self.gender = \"unknown\"\n\n    def getGender(self):\n    print(self.gender)\n\nclass Male(Person):\n    def __init__(self):\n    self.gender = \"Male\"\n\nclass Female(Person):\n    def __init__(self):\n    self.gender = \"Female\"\n\nsharon = Female()\ndoug = Male()\nsharon.getGender()\ndoug.getGender()\n</code></pre>","text":""},{"location":"python-practics/Day_22/","title":"Question 90","text":""},{"location":"python-practics/Day_22/#question","title":"Question","text":"<p>Please write a program which count and print the numbers of each character in a string input by console.</p> <p>Example: If the following string is given as input to the program:</p> <pre><code>abcdefgabc\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>a,2\nc,2\nb,2\ne,1\nd,1\ng,1\nf,1\n</code></pre>"},{"location":"python-practics/Day_22/#hints","title":"Hints","text":"<p>Use dict to store key/value pairs. Use dict.get() method to lookup a key with default value.</p> <p>Main author's Solution: Python 2</p> <pre><code>dic = {}\ns=raw_input()\nfor s in s:\n    dic[s] = dic.get(s,0)+1\nprint '\\n'.join(['%s,%s' % (k, v) for k, v in dic.items()])\n</code></pre> <p>My Solution: Python 3</p> <pre><code>import string\n\ns = input()\nfor letter in string.ascii_lowercase:\n    cnt = s.count(letter)\n    if cnt &gt; 0:\n        print(\"{},{}\".format(letter,cnt))\n</code></pre> <p>OR</p>"},{"location":"python-practics/Day_22/#s-input-for-letter-in-rangeordaordz1-ord-gets-the-ascii-value-of-a-char-letter-chrletter-chr-gets-the-char-of-an-ascii-value-cnt-scountletter-if-cnt-0-printformatlettercnt","title":"<pre><code>s = input()\nfor letter in range(ord('a'),ord('z')+1):    # ord() gets the ascii value of a char\n    letter = chr(letter)                     # chr() gets the char of an ascii value\n    cnt = s.count(letter)\n    if cnt &gt; 0:\n        print(\"{},{}\".format(letter,cnt))\n</code></pre>","text":""},{"location":"python-practics/Day_22/#solution-by-utkarsh4697-s-abcdefgabc-for-i-in-sortedsets-printfi-scounti","title":"<pre><code>'''Solution by: Utkarsh4697\n'''\ns = 'abcdefgabc'\nfor i in sorted(set(s)):\n    print(f'{i}, {s.count(i)}')\n</code></pre>","text":""},{"location":"python-practics/Day_22/#solution-by-popomaticbubble-def-character_countertext-characters_list-listtext-char_count-for-x-in-characters_list-if-x-in-char_countkeys-char_countx-1-else-char_countx-1-return-char_count-def-dict_viewerdictionary-for-x-y-in-dictionaryitems-printfxy-text-input-dict_viewercharacter_countertext","title":"<pre><code>'''Solution by: popomaticbubble\n'''\ndef character_counter(text):\n    characters_list = list(text)\n    char_count = {}\n    for x in characters_list:\n        if x in char_count.keys():\n            char_count[x] += 1\n        else:\n            char_count[x] = 1\n    return char_count\n\n\ndef dict_viewer(dictionary):\n    for x, y in dictionary.items():\n        print(f\"{x},{y}\")\n\n\ntext = input(\"&gt; \")\ndict_viewer(character_counter(text))\n</code></pre>","text":""},{"location":"python-practics/Day_22/#question-91","title":"Question 91","text":""},{"location":"python-practics/Day_22/#question_1","title":"Question","text":"<p>Please write a program which accepts a string from console and print it in reverse order.</p> <p>Example: If the following string is given as input to the program:*</p> <pre><code>rise to vote sir\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>ris etov ot esir\n</code></pre>"},{"location":"python-practics/Day_22/#hints_1","title":"Hints","text":"<p>Use list[::-1] to iterate a list in a reverse order.</p> <p>Main author's Solution: Python 2</p> <pre><code>s=raw_input()\ns = s[::-1]\nprint s\n</code></pre> <p>My Solution: Python 3</p> <pre><code>s = input()\ns = ''.join(reversed(s))\nprint(s)\n</code></pre>"},{"location":"python-practics/Day_22/#question-92","title":"Question 92","text":""},{"location":"python-practics/Day_22/#question_2","title":"Question","text":"<p>Please write a program which accepts a string from console and print the characters that have even indexes.</p> <p>Example: If the following string is given as input to the program:</p> <pre><code>H1e2l3l4o5w6o7r8l9d\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>Helloworld\n</code></pre>"},{"location":"python-practics/Day_22/#hints_2","title":"Hints","text":"<p>Use list[::2] to iterate a list by step 2.</p> <p>Main author's Solution: Python 2</p> <pre><code>s=raw_input()\ns = s[::2]\nprint s\n</code></pre> <p>My Solution: Python 3</p> <pre><code>s = \"H1e2l3l4o5w6o7r8l9d\"\ns = [ s[i] for i in range(len(s)) if i%2 ==0 ]\nprint(''.join(s))\n</code></pre> <p>OR</p> <pre><code>s = \"H1e2l3l4o5w6o7r8l9d\"\nns =''\nfor i in range(len(s)):\n    if i % 2 == 0:\n        ns+=s[i]\nprint(ns)\n</code></pre>"},{"location":"python-practics/Day_22/#question-93","title":"Question 93","text":""},{"location":"python-practics/Day_22/#question_3","title":"Question","text":"<p>Please write a program which prints all permutations of [1,2,3]</p>"},{"location":"python-practics/Day_22/#hints_3","title":"Hints","text":"<p>Use itertools.permutations() to get permutations of list.</p> <p>Solution:</p>"},{"location":"python-practics/Day_22/#import-itertools-print-listitertoolspermutations123","title":"<pre><code>import itertools\nprint list(itertools.permutations([1,2,3]))\n</code></pre>","text":""},{"location":"python-practics/Day_22/#solution-by-popomaticbubble-from-itertools-import-permutations-def-permuation_generatoriterable-p-permutationsiterable-for-i-in-p-printi-x-123-permuation_generatorx","title":"<pre><code>\"\"\"Solution by: popomaticbubble\n\"\"\"\nfrom itertools import permutations\n\ndef permuation_generator(iterable):\n    p = permutations(iterable)\n    for i in p:\n        print(i)\n\n\nx = [1,2,3]\npermuation_generator(x)\n</code></pre>","text":""},{"location":"python-practics/Day_22/#question-94","title":"Question 94","text":""},{"location":"python-practics/Day_22/#question_4","title":"Question","text":"<p>Write a program to solve a classic ancient Chinese puzzle: We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?</p>"},{"location":"python-practics/Day_22/#hints_4","title":"Hints","text":"<p>Use for loop to iterate all possible solutions.</p> <p>Solution:</p>"},{"location":"python-practics/Day_22/#def-solvenumheadsnumlegs-nsno-solutions-for-i-in-rangenumheads1-jnumheads-i-if-2i4jnumlegs-return-ij-return-nsns-numheads-35-numlegs-94-solutionssolvenumheadsnumlegs-print-solutions","title":"<pre><code>def solve(numheads,numlegs):\n    ns='No solutions!'\n    for i in range(numheads+1):\n        j=numheads-i\n        if 2*i+4*j==numlegs:\n            return i,j\n    return ns,ns\n\nnumheads = 35\nnumlegs = 94\nsolutions=solve(numheads,numlegs)\nprint solutions\n</code></pre>","text":""},{"location":"python-practics/Day_22/#solution-by-popomaticbubble-import-itertools-def-animal_counterlst-chickens-0-rabbits-0-for-i-in-lst-if-i-2-chickens-1-elif-i-4-rabbits-1-printfnumber-of-chickens-is-chickensnnumber-of-rabbits-is-rabbits-def-animal_calculatortotal_legs-total_heads-legs_of_each_species-combinations-itertoolscombinations_with_replacementlegs_of_each_species-total_heads-correct_combos-for-i-in-listcombinations-if-sumi-total_legs-correct_combosappendi-printcorrect_combos-for-i-in-correct_combos-animal_counteri-animal_calculator94-35-legs_of_each_species24","title":"<pre><code>\"\"\"Solution by: popomaticbubble\n\"\"\"\nimport itertools\n\ndef animal_counter(lst):\n    chickens = 0    \n    rabbits = 0\n    for i in lst:\n        if i == 2:\n            chickens += 1\n        elif i == 4:\n            rabbits += 1\n    print(f\"Number of chickens is {chickens}\\nNumber of rabbits is {rabbits}\")\n\n\ndef animal_calculator(total_legs, total_heads, legs_of_each_species):\n    combinations = itertools.combinations_with_replacement(legs_of_each_species, total_heads)\n    correct_combos = []\n    for i in list(combinations):\n        if sum(i) == total_legs:\n            correct_combos.append(i)\n    print(correct_combos)\n    for i in correct_combos:\n        animal_counter(i)\n\nanimal_calculator(94, 35, legs_of_each_species=[2,4])\n</code></pre>","text":""},{"location":"python-practics/Day_23/","title":"The extended part of the repository starts from this page. Previous 94 problems were collected from the repository mentioned in intro. The following problems are collected from Hackerrank and other resources from internet.All the given solutions are in python 3.","text":""},{"location":"python-practics/Day_23/#question-95","title":"Question 95","text":""},{"location":"python-practics/Day_23/#question","title":"Question","text":"<p>Given the participants' score sheet for your University Sports Day, you are required to find the runner-up score. You are given scores. Store them in a list and find the score of the runner-up.</p> <p>If the following string is given as input to the program:</p> <pre><code>5\n2 3 6 6 5\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>5\n</code></pre>"},{"location":"python-practics/Day_23/#hints","title":"Hints","text":"<p>Make the scores unique and then find 2nd best number</p> <p>My Solution: Python 3</p> <pre><code>n = int(input())\narr = map(int, input().split())\narr = list(set(arr))\narr.sort()\nprint(arr[-2])\n</code></pre> <pre><code>'''\nSolution by: mishrasunny-coder\n'''\nnum = int(input(\"Enter num: \"))\nL = []\n\nwhile True:\n    L.append(num)\n    num = int(input(\"Enter another: \"))\n    if num == 0:\n        break\n\nL1 = list(set(L[:]))\nL2 = sorted(L1)\nprint(L2)\n\nprint(f'The runner up is {L2[-2]}')\n</code></pre>"},{"location":"python-practics/Day_23/#solution-by-kailashs3-num-intinput-scores-listmapint-inputsplit-winner-maxscores-lst-if-lenscores-num-printlength-of-score-is-greater-than-input-given-else-for-score-in-scores-if-winner-score-lstappendscore-runnerup-maxlst-printrunnerup","title":"<pre><code>'''Solution by: KailashS3 \n'''\nnum = int(input())\nscores = list(map(int, input().split(' ')))\nwinner = max(scores)\nlst = []\n\nif len(scores) != num:\n    print('length of score is greater than input given')\nelse:\n    for score in scores:\n    if winner &gt; score:\n        lst.append(score)\n\nrunnerup = max(lst)\nprint(runnerup)\n</code></pre>","text":""},{"location":"python-practics/Day_23/#question-96","title":"Question 96","text":""},{"location":"python-practics/Day_23/#question_1","title":"Question","text":"<p>You are given a string S and width W. Your task is to wrap the string into a paragraph of width.</p> <p>If the following string is given as input to the program:</p> <pre><code>ABCDEFGHIJKLIMNOQRSTUVWXYZ\n4\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>ABCD\nEFGH\nIJKL\nIMNO\nQRST\nUVWX\nYZ\n</code></pre>"},{"location":"python-practics/Day_23/#hints_1","title":"Hints","text":"<p>Use wrap function of textwrap module</p> <p>My Solution: Python 3</p> <pre><code>import textwrap\n\ndef wrap(string, max_width):\n    string = textwrap.wrap(string,max_width)\n    string = \"\\n\".join(string)\n    return string\n\nif __name__ == '__main__':\n    string, max_width = input(), int(input())\n    result = wrap(string, max_width)\n    print(result)\n</code></pre>"},{"location":"python-practics/Day_23/#solution-by-mishrasunny-coder-import-textwrap-string-input-width-intinput-printtextwrapfillstringwidth","title":"<pre><code>\"\"\"Solution by: mishrasunny-coder\n\"\"\"\nimport textwrap\n\nstring = input()\nwidth = int(input())\n\nprint(textwrap.fill(string,width))\n</code></pre>","text":""},{"location":"python-practics/Day_23/#solution-by-prashanth-from-textwrap-import-wrap-x-strinput-w-intinput-z-listwrapx-w-for-i-in-z-printi","title":"<pre><code>\"\"\"solution by  : Prashanth\n\"\"\"\nfrom textwrap import wrap\nx = str(input(': '))\nw = int(input())\nz = list(wrap(x, w))\nfor i in z:\n    print(i)\n</code></pre>","text":""},{"location":"python-practics/Day_23/#solution-by-saxenaharsh24-import-textwrap-string-input-printnjointextwrapwrapstring-width-intinput","title":"<pre><code>\"\"\"solution by  : saxenaharsh24\n\"\"\"\nimport textwrap\nstring = input('')\nprint('\\n'.join(textwrap.wrap(string, width= int(input('')))))\n</code></pre>","text":""},{"location":"python-practics/Day_23/#solution-by-popomaticbubble-import-itertools-string-input-width_length-intinputwhat-is-the-width-of-the-groupings-def-grouperstring-width-iters-iterstring-width-return-itertoolszip_longestiters-fillvalue-def-displayergroups-for-x-in-groups-if-x-continue-else-printjoinx-displayergrouperstring-width_length","title":"<pre><code>\"\"\"solution by  : popomaticbubble\n\"\"\"\nimport itertools\nstring = input(\"&gt; \")\nwidth_length = int(input(\"What is the width of the groupings? \"))\n\ndef grouper(string, width):\n    iters = [iter(string)] * width\n    return itertools.zip_longest(*iters, fillvalue='')\n\ndef displayer(groups):\n    for x in groups:\n        if x == '':\n            continue\n        else:\n            print(''.join(x))\n\ndisplayer(grouper(string, width_length))\n</code></pre>","text":""},{"location":"python-practics/Day_23/#question-97","title":"Question 97","text":""},{"location":"python-practics/Day_23/#question_2","title":"Question","text":"<p>You are given an integer, N. Your task is to print an alphabet rangoli of size N. (Rangoli is a form of Indian folk art based on creation of patterns.)</p> <p>Different sizes of alphabet rangoli are shown below:</p> <pre><code>#size 3\n\n----c----\n--c-b-c--\nc-b-a-b-c\n--c-b-c--\n----c----\n\n#size 5\n\n--------e--------\n------e-d-e------\n----e-d-c-d-e----\n--e-d-c-b-c-d-e--\ne-d-c-b-a-b-c-d-e\n--e-d-c-b-c-d-e--\n----e-d-c-d-e----\n------e-d-e------\n--------e--------\n</code></pre>"},{"location":"python-practics/Day_23/#hints_2","title":"Hints","text":"<p>First print the half of the Rangoli in the given way and save each line in a list. Then print the list in reverse order to get the rest.</p> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_23/#import-string-def-print_rangolisize-n-size-alph-stringascii_lowercase-width-4-n-3-ans-for-i-in-rangen-left-joinalphn-i-1n-mid-left-10-1-left-final-midcenterwidth-ansappendfinal-if-lenans-1-for-i-in-ansn-2-1-ansappendi-ans-njoinans-printans-if-__name__-__main__-n-intinput-print_rangolin","title":"<pre><code>import string\ndef print_rangoli(size):\n    n = size\n    alph = string.ascii_lowercase\n    width = 4 * n - 3\n\n    ans = []\n    for i in range(n):\n        left = '-'.join(alph[n - i - 1:n])\n        mid = left[-1:0:-1] + left\n        final = mid.center(width, '-')\n        ans.append(final)\n\n    if len(ans) &gt; 1:\n        for i in ans[n - 2::-1]:\n            ans.append(i)\n    ans = '\\n'.join(ans)\n    print(ans)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print_rangoli(n)\n</code></pre>","text":"<pre><code>'''Solution by: suggula jaswanth\n'''\ndef rangoli(n):\n    # your code goes here\n    l1=list(map(chr,range(97,123)))\n    x=l1[n-1::-1]+l1[1:n]\n    mid=len('-'.join(x))\n    for i in range(1,n):\n        print('-'.join(l1[n-1:n-i:-1]+l1[n-i:n]).center(mid,'-'))\n    for i in range(n,0,-1):\n        print('-'.join(l1[n-1:n-i:-1]+l1[n-i:n]).center(mid,'-')) \nrangoli(5)\n</code></pre>"},{"location":"python-practics/Day_23/#question-98","title":"Question 98","text":""},{"location":"python-practics/Day_23/#question_3","title":"Question","text":"<p>You are given a date. Your task is to find what the day is on that date.</p> <p>Input</p> <p>A single line of input containing the space separated month, day and year, respectively, in MM DD YYYY format.</p> <pre><code>08 05 2015\n</code></pre> <p>Output</p> <p>Output the correct day in capital letters.</p> <pre><code>WEDNESDAY\n</code></pre>"},{"location":"python-practics/Day_23/#hints_3","title":"Hints","text":"<p>Use weekday function of calender module</p> <p>Solution:</p> <pre><code>import calendar\n\nmonth, day, year = map(int, input().split())\n\ndayId = calendar.weekday(year, month, day)\nprint(calendar.day_name[dayId].upper())\n</code></pre>"},{"location":"python-practics/Day_23/#question-99","title":"Question 99","text":""},{"location":"python-practics/Day_23/#question_4","title":"Question","text":"<p>Given 2 sets of integers, M and N, print their symmetric difference in ascending order. The term symmetric difference indicates those values that exist in either M or N but do not exist in both.</p> <p>Input</p> <p>The first line of input contains an integer, M.The second line contains M space-separated integers.The third line contains an integer, N.The fourth line contains N space-separated integers.</p> <pre><code>4\n2 4 5 9\n4\n2 4 11 12\n</code></pre> <p>Output</p> <p>Output the symmetric difference integers in ascending order, one per line.</p> <pre><code>5\n9\n11\n12\n</code></pre>"},{"location":"python-practics/Day_23/#hints_4","title":"Hints","text":"<p>Use \\'^\\' to make symmetric difference operation.</p> <p>Solution:</p> <pre><code>if __name__ == '__main__':\n    n = int(input())\n    set1 = set(map(int,input().split()))\n\n    m = int(input())\n    set2 = set(map(int, input().split()))\n\n    ans = list(set1 ^ set2)\n    ans.sort()\n    for i in ans:\n        print(i)\n</code></pre>"},{"location":"python-practics/Day_24/","title":"Question 100","text":""},{"location":"python-practics/Day_24/#question","title":"Question","text":"<p>You are given words. Some words may repeat. For each word, output its number of occurrences. The output order should correspond with the input order of appearance of the word. See the sample input/output for clarification.</p> <p>If the following string is given as input to the program:</p> <pre><code>4\nbcdef\nabcdefg\nbcde\nbcdef\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>3\n2 1 1\n</code></pre>"},{"location":"python-practics/Day_24/#hints","title":"Hints","text":"<p>Make a list to get the input order and a dictionary to count the word frequency</p> <p>My Solution: Python 3</p> <pre><code>n = int(input())\n\nword_list = []\nword_dict = {}\n\nfor i in range(n):\n    word = input()\n    if word not in word_dict:\n        word_list.append(word)\n    word_dict[word] = word_dict.get(word, 0) + 1\n\nprint(len(word_list))\nfor word in word_list:\n    print(word_dict[word], end=' ')\n</code></pre>"},{"location":"python-practics/Day_24/#question-101","title":"Question 101","text":""},{"location":"python-practics/Day_24/#question_1","title":"Question","text":"<p>You are given a string.Your task is to count the frequency of letters of the string and print the letters in descending order of frequency.</p> <p>If the following string is given as input to the program:</p> <pre><code>aabbbccde\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>b 3\na 2\nc 2\nd 1\ne 1\n</code></pre>"},{"location":"python-practics/Day_24/#hints_1","title":"Hints","text":"<p>Count frequency with dictionary and sort by Value from dictionary Items</p> <p>My Solution: Python 3</p> <pre><code>word = input()\ndct = {}\nfor i in word:\n    dct[i] = dct.get(i,0) + 1\n\ndct = sorted(dct.items(),key=lambda x: (-x[1],x[0]))\nfor i in dct:\n    print(i[0],i[1])\n</code></pre> <pre><code>'''Solution by: yuan1z'''\n\nX = input()\nmy_set = set(X)\narr = []\nfor item in my_set:\n    arr.append([item,X.count(item)])\ntmp = sorted(arr,key = lambda x: (-x[1],x[0]))\n\nfor i in tmp:\n    print(i[0]+' '+str(i[1]))\n</code></pre> <pre><code>'''Solution by: StartZer0'''\n\ns = list(input())\n\ndict_count_ = {k:s.count(k) for k in s}\nlist_of_tuples = [(k,v) for k,v in dict_count_.items()]\nlist_of_tuples.sort(key = lambda x: x[1], reverse = True)\n\nfor item in list_of_tuples:\n  print(item[0], item[1])\n</code></pre>"},{"location":"python-practics/Day_24/#question-102","title":"Question 102","text":""},{"location":"python-practics/Day_24/#question_2","title":"Question","text":"<p>Write a Python program that accepts a string and calculate the number of digits and letters.</p> <p>Input</p> <pre><code>Hello321Bye360\n</code></pre> <p>Output</p> <pre><code>Digit - 6\nLetter - 8\n</code></pre>"},{"location":"python-practics/Day_24/#hints_2","title":"Hints","text":"<p>Use isdigit() and isalpha() function</p> <p>Solution:</p> <pre><code>word = input()\ndigit,letter = 0,0\nfor char in word:\n    digit+=char.isdigit()\n    letter+=char.isalpha()\n\nprint('Digit -',digit)\nprint('Letter -',letter)\n</code></pre>"},{"location":"python-practics/Day_24/#question-103","title":"Question 103","text":""},{"location":"python-practics/Day_24/#question_3","title":"Question","text":"<p>Given a number N.Find Sum of 1 to N Using Recursion</p> <p>Input</p> <pre><code>5\n</code></pre> <p>Output</p> <pre><code>15\n</code></pre>"},{"location":"python-practics/Day_24/#hints_3","title":"Hints","text":"<p>Make a recursive function to get the sum</p> <p>Solution:</p>"},{"location":"python-practics/Day_24/#def-recn-if-n-0-return-n-return-recn-1-n-n-intinput-sum-recn-printsum","title":"<pre><code>def rec(n):\n    if n == 0:\n        return n\n    return rec(n-1) + n\n\n\nn = int(input())\nsum = rec(n)\nprint(sum)\n</code></pre>","text":""},{"location":"python-practics/Day_24/#solution-by-popomaticbubble-def-summercounter-n-current-if-n-0-return-0-if-counter-n-return-currentn-else-current-current-counter-counter-1-return-summercounter-n-current-n-intinput-printsummer1-n-0","title":"<pre><code>\"\"\"Solution by: popomaticbubble\n\"\"\"\ndef summer(counter, n, current):\n    if n == 0:\n        return 0\n    if counter == n:\n        return current+n\n    else:\n        current = current + counter\n        counter += 1\n        return summer(counter, n, current)\n\n\nN = int(input(\"&gt; \"))\nprint(summer(1, N, 0))\n</code></pre>","text":""},{"location":"python-practics/Day_3/","title":"Question 10","text":""},{"location":"python-practics/Day_3/#question","title":"Question","text":"<p>Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>hello world and practice makes perfect and hello world again\n</code></pre> <p>Then, the output should be:</p> <pre><code>again and hello makes perfect practice world\n</code></pre>"},{"location":"python-practics/Day_3/#hints","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.We use set container to remove duplicated data automatically and then use sorted() to sort the data.</p> <p>Main author's Solution: Python 2</p> <pre><code>s = raw_input()\nwords = [word for word in s.split(\" \")]\nprint \" \".join(sorted(list(set(words))))\n</code></pre> <p>My Solution: Python 3</p> <pre><code>word = input().split()\n\nfor i in word:\n    if word.count(i) &gt; 1:    #count function returns total repeatation of an element that is send as argument\n        word.remove(i)     # removes exactly one element per call\n\nword.sort()\nprint(\" \".join(word))\n</code></pre> <p>OR</p> <pre><code>word = input().split()\n[word.remove(i) for i in word if word.count(i) &gt; 1 ]   # removal operation with comprehension method\nword.sort()\nprint(\" \".join(word))\n</code></pre> <p>OR</p> <pre><code>word = sorted(list(set(input().split())))              #  input string splits -&gt; converting into set() to store unique\n                                                       #  element -&gt; converting into list to be able to apply sort\nprint(\" \".join(word))\n</code></pre>"},{"location":"python-practics/Day_3/#solution-by-sukanya-mahapatra-inp_string-inputenter-string-split-out_string-for-words-in-inp_string-if-words-not-in-out_string-out_stringappendwords-print-joinsortedout_string","title":"<pre><code>'''Solution by: Sukanya-Mahapatra\n'''\ninp_string = input(\"Enter string: \").split()\nout_string = []\nfor words in inp_string:\n    if words not in out_string:\n        out_string.append(words)\nprint(\" \".join(sorted(out_string)))\n</code></pre>","text":""},{"location":"python-practics/Day_3/#question-11","title":"Question 11","text":""},{"location":"python-practics/Day_3/#question_1","title":"Question","text":"<p>Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.</p> <p>Example:</p> <pre><code>0100,0011,1010,1001\n</code></pre> <p>Then the output should be:</p> <pre><code>1010\n</code></pre> <p>Notes: Assume the data is input by console.</p>"},{"location":"python-practics/Day_3/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>value = []\nitems=[x for x in raw_input().split(',')]\nfor p in items:\n    intp = int(p,2)\n    if not intp % 5:\n        value.append(p)\n\nprint ','.join(value)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def check(x):                       # converts binary to integer &amp; returns zero if divisible by 5\n    total,pw = 0,1\n    reversed(x)\n\n    for i in x:\n        total+=pw * (ord(i) - 48)   # ord() function returns ASCII value\n        pw*=2\n    return total % 5\n\ndata = input().split(\",\")           # inputs taken here and splited in ',' position\nlst = []\n\nfor i in data:\n    if check(i) == 0:               # if zero found it means divisible by zero and added to the list\n        lst.append(i)\n\nprint(\",\".join(lst))\n</code></pre> <p>OR</p> <pre><code>def check(x):                   # check function returns true if divisible by 5\n    return int(x,2)%5 == 0      # int(x,b) takes x as string and b as base from which\n                                # it will be converted to decimal\ndata = input().split(',')\n\ndata = list(filter(check,data)) # in filter(func,object) function, elements are picked from 'data' if found True by 'check' function\nprint(\",\".join(data))\n</code></pre> <p>OR</p> <pre><code>data = input().split(',')\ndata = list(filter(lambda i:int(i,2)%5==0,data))    # lambda is an operator that helps to write function of one line\nprint(\",\".join(data))\n</code></pre> <pre><code>'''Solution by: nikitaMogilev\n'''\ndata = input().split(',')\ndata = [num for num in data if int(num, 2) % 5 == 0]\nprint(','.join(data))\n</code></pre> <pre><code>'''Solution by: hajimalung baba\n'''\nprint(*(binary for binary in input().split(',') if int(binary,base=2)%5==0))\n</code></pre>"},{"location":"python-practics/Day_3/#question-12","title":"Question 12","text":""},{"location":"python-practics/Day_3/#question_2","title":"Question:","text":"<p>Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.The numbers obtained should be printed in a comma-separated sequence on a single line.</p>"},{"location":"python-practics/Day_3/#hints_2","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>values = []\nfor i in range(1000, 3001):\n    s = str(i)\n    if (int(s[0])%2 == 0) and (int(s[1])%2 == 0) and (int(s[2])%2 == 0) and (int(s[3])%2 == 0):\n        values.append(s)\nprint \",\".join(values)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>lst = []\n\nfor i in range(1000,3001):\n    flag = 1\n    for j in str(i):          # every integer number i is converted into string\n        if ord(j)%2 != 0:     # ord returns ASCII value and j is every digit of i\n            flag = 0          # flag becomes zero if any odd digit found\n    if flag == 1:\n        lst.append(str(i))    # i is stored in list as string\n\nprint(\",\".join(lst))\n</code></pre> <p>OR</p> <pre><code>def check(element):\n    return all(ord(i)%2 == 0 for i in element)  # all returns True if all digits i is even in element\n\nlst = [str(i) for i in range(1000,3001)]        # creates list of all given numbers with string data type\nlst = list(filter(check,lst))                   # filter removes element from list if check condition fails\nprint(\",\".join(lst))\n</code></pre> <p>OR</p> <pre><code>lst = [str(i) for i in range(1000,3001)]\nlst = list(filter(lambda i:all(ord(j)%2 == 0 for j in i), lst))   # using lambda to define function inside filter function\nprint(\",\".join(lst))\n</code></pre> <pre><code>'''Solution by: nikitaMogilev\n'''\n# map() digits of each number with lambda function and check if all() of them even\n# str(num) gives us opportunity to iterate through number by map() and join()\nprint(','.join([str(num) for num in range(1000, 3001) if all(map(lambda num: int(num) % 2 == 0, str(num)))]))\n</code></pre> <pre><code>'''Solution by: hajimalung\n'''\nfrom functools import reduce \n#using reduce to check if the number has only even digits or not\ndef is_even_and(bool_to_compare,num_as_char):\n    return int(num_as_char)%2==0 and bool_to_compare\n\nprint(*(i for i in range(1000,3001) if reduce(is_even_and,str(i),True)),sep=',')\n</code></pre>"},{"location":"python-practics/Day_3/#question-13","title":"Question 13","text":""},{"location":"python-practics/Day_3/#question_3","title":"Question:","text":"<p>Write a program that accepts a sentence and calculate the number of letters and digits.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>hello world! 123\n</code></pre> <p>Then, the output should be:</p> <pre><code>LETTERS 10\nDIGITS 3\n</code></pre>"},{"location":"python-practics/Day_3/#hints_3","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>s = raw_input()\nd = {\"DIGITS\":0, \"LETTERS\":0}\nfor c in s:\n    if c.isdigit():\n        d[\"DIGITS\"]+=1\n    elif c.isalpha():\n        d[\"LETTERS\"]+=1\n    else:\n        pass\nprint \"LETTERS\", d[\"LETTERS\"]\nprint \"DIGITS\", d[\"DIGITS\"]\n</code></pre> <p>My Solution: Python 3</p> <pre><code>word = input()\nletter,digit = 0,0\n\nfor i in word:\n    if ('a'&lt;=i and i&lt;='z') or ('A'&lt;=i and i&lt;='Z'):\n        letter+=1\n    if '0'&lt;=i and i&lt;='9':\n        digit+=1\n\nprint(\"LETTERS {0}\\nDIGITS {1}\".format(letter,digit))\n</code></pre> <p>OR</p>"},{"location":"python-practics/Day_3/#word-input-letter-digit-00-for-i-in-word-if-iisalpha-returns-true-if-alphabet-letter-1-elif-iisnumeric-returns-true-if-numeric-digit-1-printfletters-letterndigits-two-different-types-of-formating-method-is-shown-in-both-solution","title":"<pre><code>word = input()\nletter, digit = 0,0\n\nfor i in word:\n    if i.isalpha(): # returns True if alphabet\n        letter += 1\n    elif i.isnumeric(): # returns True if numeric\n        digit += 1\nprint(f\"LETTERS {letter}\\n{digits}\") # two different types of formating method is shown in both solution\n</code></pre>","text":""},{"location":"python-practics/Day_3/#solution-by-popomaticbubble-import-re-input_string-input-print-counter-letterslenrefindalla-za-z-input_string-numberslenrefindall0-9-input_string-printcounter","title":"<pre><code>''' Solution by: popomaticbubble\n'''\nimport re\n\ninput_string = input('&gt; ')\nprint()\ncounter = {\"LETTERS\":len(re.findall(\"[a-zA-Z]\", input_string)), \"NUMBERS\":len(re.findall(\"[0-9]\", input_string))}\n\nprint(counter)\n</code></pre>","text":"<p><pre><code>'''Solution by: MarkisLandis\n'''\n\nsen = input(\"\").split(\" \")\nalp, digit = 0, 0\n\nfor item in sen:\n    lst = [char for char in item]\n    for j in lst:\n        if 64 &lt; ord(j) &lt; 123:\n            alp += 1\n        if j.isdigit():\n            digit += 1\nprint(f\"LETTERS : {alp} \\n DIGITS : {digit}\")\n</code></pre> <pre><code>'''Solution by: hajimalung\n'''\n#using reduce for to count\nfrom functools import reduce\n\ndef count_letters_digits(counters,char_to_check):\n    counters[0] += char_to_check.isalpha()\n    counters[1] += char_to_check.isnumeric()\n    return counters\n\nprint('LETTERS {0}\\nDIGITS {1}'.format(*reduce(count_letters_digits,input(),[0,0])))\n</code></pre></p>"},{"location":"python-practics/Day_3/#conclusion","title":"Conclusion","text":"<p>All the above problems are mostly string related problems. Major parts of the solution includes string releted functions and comprehension method to write down the code in more shorter form.</p>"},{"location":"python-practics/Day_4/","title":"Question 14","text":""},{"location":"python-practics/Day_4/#question","title":"Question:","text":"<p>Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>Hello world!\n</code></pre> <p>Then, the output should be:</p> <pre><code>UPPER CASE 1\nLOWER CASE 9\n</code></pre>"},{"location":"python-practics/Day_4/#hints","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>s = raw_input()\nd = {\"UPPER CASE\":0, \"LOWER CASE\":0}\nfor c in s:\n    if c.isupper():\n        d[\"UPPER CASE\"]+=1\n    elif c.islower():\n        d[\"LOWER CASE\"]+=1\n    else:\n        pass\nprint \"UPPER CASE\", d[\"UPPER CASE\"]\nprint \"LOWER CASE\", d[\"LOWER CASE\"]\n</code></pre> <p>My Solution: Python 3</p> <pre><code>word = input()\nupper,lower = 0,0\n\nfor i in word:\n    if 'a'&lt;=i and i&lt;='z' :\n        lower+=1\n    if 'A'&lt;=i and i&lt;='Z':\n        upper+=1\n\nprint(\"UPPER CASE {0}\\nLOWER CASE {1}\".format(upper,lower))\n</code></pre> <p>OR</p> <pre><code>word = input()\nupper,lower = 0,0\n\nfor i in word:\n        lower+=i.islower()\n        upper+=i.isupper()\n\nprint(\"UPPER CASE {0}\\nLOWER CASE {1}\".format(upper,lower))\n</code></pre> <p>OR</p> <pre><code>word = input()\nupper = sum(1 for i in word if i.isupper())           # sum function cumulatively sum up 1's if the condition is True\nlower = sum(1 for i in word if i.islower())\n\nprint(\"UPPER CASE {0}\\nLOWER CASE {1}\".format(upper,lower))\n</code></pre> <p>OR</p> <pre><code># solution by Amitewu\n\nstring = input(\"Enter the sentense\")\nupper = 0\nlower = 0\nfor x in string:\n    if x.isupper() == True:\n        upper += 1\n    if x.islower() == True:\n        lower += 1\n\nprint(\"UPPER CASE: \", upper)\nprint(\"LOWER CASE: \", lower)\n</code></pre>"},{"location":"python-practics/Day_4/#question-15","title":"Question 15","text":""},{"location":"python-practics/Day_4/#question_1","title":"Question:","text":"<p>Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>9\n</code></pre> <p>Then, the output should be:</p> <pre><code>11106\n</code></pre>"},{"location":"python-practics/Day_4/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>a = raw_input()\nn1 = int( \"%s\" % a )\nn2 = int( \"%s%s\" % (a,a) )\nn3 = int( \"%s%s%s\" % (a,a,a) )\nn4 = int( \"%s%s%s%s\" % (a,a,a,a) )\nprint n1+n2+n3+n4\n</code></pre> <p>My Solution: Python 3</p> <pre><code>a = input()\ntotal,tmp = 0,str()        # initialing an integer and empty string\n\nfor i in range(4):\n    tmp+=a               # concatenating 'a' to 'tmp'\n    total+=int(tmp)      # converting string type to integer type\n\nprint(total)\n</code></pre> <p>OR</p>"},{"location":"python-practics/Day_4/#a-input-total-inta-int2a-int3a-int4a-nana-for-example-a23-2a23233a232323-printtotal","title":"<pre><code>a = input()\ntotal = int(a) + int(2*a) + int(3*a) + int(4*a)  # N*a=Na, for example  a=\"23\", 2*a=\"2323\",3*a=\"232323\"\nprint(total)\n</code></pre>","text":""},{"location":"python-practics/Day_4/#solution-by-chichilovesdonkeys-from-functools-import-reduce-x-inputplease-enter-a-digit-reducelambda-x-y-intx-inty-xi-for-i-in-range15","title":"<pre><code>'''Solution by: ChichiLovesDonkeys\n'''\nfrom functools import reduce\nx = input('please enter a digit:')\nreduce(lambda x, y: int(x) + int(y), [x*i for i in range(1,5)])\n</code></pre>","text":""},{"location":"python-practics/Day_4/#solution-by-lcastrooliveira-def-question_15string_digit-return-sumintstring_digit-n-for-n-in-range1-5-inp-input-printquestion_15inp","title":"<pre><code>'''Solution by: lcastrooliveira\n'''\ndef question_15(string_digit):\n    return sum(int(string_digit * n) for n in range(1, 5))\n\ninp = input()\nprint(question_15(inp))\n</code></pre>","text":""},{"location":"python-practics/Day_4/#solution-by-apenam7-a-input-printsumintia-for-i-in-range15","title":"<pre><code>'''Solution by: apenam7\n'''\na = input()\nprint(sum(int(i*a) for i in range(1,5)))\n</code></pre>","text":""},{"location":"python-practics/Day_5/","title":"Question 16","text":""},{"location":"python-practics/Day_5/#question","title":"Question:","text":"<p>Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers. &gt;Suppose the following input is supplied to the program:</p> <pre><code>1,2,3,4,5,6,7,8,9\n</code></pre> <p>Then, the output should be:</p> <pre><code>1,9,25,49,81\n</code></pre>"},{"location":"python-practics/Day_5/#hints","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>## The solution by the author is incorrect.Thus it's not included here.\n</code></pre> <p>My Solution: Python 3</p> <pre><code>lst = [str(int(i)**2) for i in input().split(',') if int(i) % 2]\nprint(\",\".join(lst))\n</code></pre> <pre><code>'''Solution by: shagun'''\nsquare odd no\n\nlst = input().split(',')     # splits in comma position and set up in list\n\nseq = []\nlst = [int(i) for i in lst]  # converts string to integer\nfor i in lst:\n        if i%2 != 0:\n                i = i*i\n                seq.append(i)\n\n\nseq = [str(i) for i in seq]   # All the integers are converted to string to be able to apply join operation\nprint(\",\".join(seq))\n</code></pre>"},{"location":"python-practics/Day_5/#solution-by-jack-seq-inputsplit-lst-inti-for-i-in-seq-def-flti-define-a-filter-function-return-i-2-0-result_l-stri-i-for-i-in-filterfltlst-printjoinresult_l","title":"<pre><code>'''Solution by: Jack'''\nseq = input().split(',') \nlst = [int(i) for i in seq]\ndef flt(i):                                           #Define a filter function\n    return i % 2 != 0\nresult_l = [str(i * i) for i in filter(flt,lst)]      \nprint(\",\".join(result_l))\n</code></pre>","text":"<p>There were a mistake in the the test case and the solution's whice were notified and fixed with the help of @dwedigital. My warm thanks to him.</p>"},{"location":"python-practics/Day_5/#question-17","title":"Question 17","text":""},{"location":"python-practics/Day_5/#question_1","title":"Question:","text":"<p>Write a program that computes the net amount of a bank account based a transaction log from console input. The transaction log format is shown as following:</p> <pre><code>D 100\nW 200\n</code></pre> <ul> <li>D means deposit while W means withdrawal.</li> </ul> <p>Suppose the following input is supplied to the program:</p> <pre><code>D 300\nD 300\nW 200\nD 100\n</code></pre> <p>Then, the output should be:</p> <pre><code>500\n</code></pre>"},{"location":"python-practics/Day_5/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>import sys\nnetAmount = 0\nwhile True:\n    s = raw_input()\n    if not s:\n        break\n    values = s.split(\" \")\n    operation = values[0]\n    amount = int(values[1])\n    if operation==\"D\":\n        netAmount+=amount\n    elif operation==\"W\":\n        netAmount-=amount\n    else:\n        pass\nprint netAmount\n</code></pre> <p>My Solution: Python 3</p> <pre><code>total = 0\nwhile True:\n    s = input().split()\n    if not s:            # break if the string is empty\n        break\n    cm,num = map(str,s)    # two inputs are distributed in cm and num in string data type\n\n    if cm=='D':\n        total+=int(num)\n    if cm=='W':\n        total-=int(num)\n\nprint(total)\n</code></pre> <pre><code>'''Solution by: leonedott'''\n\nlst = []\nwhile True:\n  x = input()\n  if len(x)==0:\n    break\n  lst.append(x)\n\nbalance = 0\nfor item in lst:\n  if 'D' in item:\n    balance += int(item.strip('D '))\n  if 'W' in item:\n    balance -= int(item.strip('W '))\nprint(balance)\n</code></pre> <pre><code>'''Solution by: AlexanderSro'''\n\naccount = 0\nwhile True:\n    action = input(\"Deposit/Whitdrow/Balance/Quit? D/W/B/Q: \").lower()\n    if action == \"d\":\n        deposit = input(\"How much would you like to deposit? \")\n        account = account + int(deposit)\n    elif action == \"w\":\n        withdrow = input(\"How much would you like to withdrow? \")\n        account = account - int(withdrow)\n    elif action == \"b\":\n        print(account)\n    else:\n        quit()\n</code></pre>"},{"location":"python-practics/Day_5/#solution-by-shalomprinz-lines-while-true-loopinput-input-if-loopinput-done-break-else-linesappendloopinput-lst-listinti2-if-i0-d-else-inti2-for-i-in-lines-printsumlst","title":"<pre><code>'''Solution by: ShalomPrinz\n'''\nlines = []\nwhile True:\n    loopInput = input()\n    if loopInput == \"done\":\n        break\n    else:\n        lines.append(loopInput)\n\nlst = list(int(i[2:]) if i[0] == 'D' else -int(i[2:]) for i in lines)\nprint(sum(lst))\n</code></pre>","text":""},{"location":"python-practics/Day_5/#solution-by-popomaticbubble-transactions-while-true-text-input-if-text-text-textstripd-text-textreplacew-transactionsappendtext-else-break-transactions-inti-for-i-in-transactions-balance-sumtransactions-printfbalance-is-balance","title":"<pre><code>'''Solution by: popomaticbubble \n'''\ntransactions = []\n\nwhile True:\n    text = input(\"&gt; \")\n    if text:\n        text = text.strip('D ')\n        text = text.replace('W ', '-')\n        transactions.append(text)\n    else: \n        break   \n\ntransactions = (int(i) for i in transactions)\nbalance = sum(transactions)\nprint(f\"Balance is {balance}\")\n</code></pre>","text":""},{"location":"python-practics/Day_5/#solution-by-chichilovesdonkeys-money-0-while-1-trans-inputsplit-if-trans0-d-money-money-inttrans1-elif-trans0-w-money-money-inttrans1-elif-input-break-printfyour-current-balance-is-money","title":"<pre><code>'''Solution by: ChichiLovesDonkeys\n'''\n\nmoney = 0\nwhile 1:\n    trans = input().split(' ')\n    if trans[0] == 'D':\n        money = money + int(trans[1])\n    elif trans[0] == 'W':\n        money = money - int(trans[1])\n    elif input() == '':\n        break\n    print(f'Your current balance is: {money}')\n</code></pre>","text":""},{"location":"python-practics/Day_6/","title":"Question 18","text":""},{"location":"python-practics/Day_6/#question","title":"Question:","text":"<p>A website requires the users to input username and password to register. Write a program to check the validity of password input by users.</p> <p>Following are the criteria for checking the password:</p> <ul> <li>At least 1 letter between [a-z]</li> <li>At least 1 number between [0-9]</li> <li>At least 1 letter between [A-Z]</li> <li>At least 1 character from [$#@]</li> <li>Minimum length of transaction password: 6</li> <li>Maximum length of transaction password: 12</li> </ul> <p>Your program should accept a sequence of comma separated passwords and will check them according to the above criteria. Passwords that match the criteria are to be printed, each separated by a comma.</p> <p>Example</p> <p>If the following passwords are given as input to the program:</p> <pre><code>ABd1234@1,a F1#,2w3E*,2We3345\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>ABd1234@1\n</code></pre>"},{"location":"python-practics/Day_6/#hints","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>import re\nvalue = []\nitems = [x for x in raw_input().split(',')]\nfor p in items:\n    if len(p) &lt; 6 or len(p) &gt; 12:\n        continue\n    else:\n        pass\n    if not re.search(\"[a-z]\",p):\n        continue\n    elif not re.search(\"[0-9]\",p):\n        continue\n    elif not re.search(\"[A-Z]\",p):\n        continue\n    elif not re.search(\"[$#@]\",p):\n        continue\n    elif re.search(\"\\s\",p):\n        continue\n    else:\n        pass\n    value.append(p)\nprint \",\".join(value)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def is_low(x):                  # Returns True  if the string has a lowercase\n    for i in x:\n        if 'a'&lt;=i and i&lt;='z':\n            return True\n    return  False\n\ndef is_up(x):                   # Returns True  if the string has a uppercase\n    for i in x:\n        if 'A'&lt;= i and i&lt;='Z':\n            return True\n    return  False\n\ndef is_num(x):                  # Returns True  if the string has a numeric digit\n    for i in x:\n        if '0'&lt;=i and i&lt;='9':\n            return True\n    return  False\n\ndef is_other(x):                # Returns True if the string has any \"$#@\"\n    for i in x:\n        if i=='$' or i=='#' or i=='@':\n            return True\n    return False\n\ns = input().split(',')\nlst = []\n\nfor i in s:\n    length = len(i)\n    if 6 &lt;= length and length &lt;= 12 and is_low(i) and is_up(i) and is_num(i) and is_other(i):   #Checks if all the requirments are fulfilled\n        lst.append(i)\n\nprint(\",\".join(lst))\n</code></pre> <p>OR</p> <pre><code>def check(x):\n    cnt = (6&lt;=len(x) and len(x)&lt;=12)\n    for i in x:\n        if i.isupper():\n            cnt+=1\n            break\n    for i in x:\n        if i.islower():\n            cnt+=1\n            break\n    for i in x:\n        if i.isnumeric():\n            cnt+=1\n            break\n    for i in x:\n        if i=='@' or i=='#'or i=='$':\n            cnt+=1\n            break\n    return cnt == 5               # counting if total 5 all conditions are fulfilled then returns True\n\ns = input().split(',')\nlst = filter(check,s)             # Filter function pick the words from s, those returns True by check() function\nprint(\",\".join(lst))\n</code></pre> <p>OR</p> <pre><code>import  re\n\ns = input().split(',')\nlst = []\n\nfor i in s:\n    cnt = 0\n    cnt+=(6&lt;=len(i) and len(i)&lt;=12)\n    cnt+=bool(re.search(\"[a-z]\",i))      # here re module includes a function re.search() which returns the object information\n    cnt+=bool(re.search(\"[A-Z]\",i))      # of where the pattern string i is matched with any of the [a-z]/[A-z]/[0=9]/[@#$] characters\n    cnt+=bool(re.search(\"[0-9]\",i))      # if not a single match found then returns NONE which converts to False in boolean\n    cnt+=bool(re.search(\"[@#$]\",i))      # expression otherwise True if found any.\n    if cnt == 5:\n        lst.append(i)\n\nprint(\",\".join(lst))\n</code></pre> <pre><code>'''Solution by: pratikb0501\n'''\nimport re\na = input('Enter passwords: ').split(',')\npass_pattern = re.compile(r\"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[$#@]).{6,12}$\")\nfor i in a:\n    if pass_pattern.fullmatch(i):\n        print(i)\n</code></pre> <p>OR</p> <pre><code>import re\ndef multiple (patterns, string):\n  for i in patterns:\n    if not re.search(i, string):\n      return False\n\n  if 6 &lt;= len(string) &lt;= 12:\n    return True\n  else:\n    return False\nx = str(input(\"Type password: \"))\npatterns = [r\"[a-z]\", r\"[A-Z]\", r\"[0-9]\", r\"[$|#|@]\"]\nprint(multiple(patterns, x))\n</code></pre>"},{"location":"python-practics/Day_6/#question-19","title":"Question 19","text":""},{"location":"python-practics/Day_6/#question_1","title":"Question:","text":"<p>You are required to write a program to sort the (name, age, score) tuples by ascending order where name is string, age and score are numbers. The tuples are input by console. The sort criteria is:</p> <ul> <li>1: Sort based on name</li> <li>2: Then sort based on age</li> <li>3: Then sort by score</li> </ul> <p>The priority is that name &gt; age &gt; score.</p> <p>If the following tuples are given as input to the program:</p> <pre><code>Tom,19,80\nJohn,20,90\nJony,17,91\nJony,17,93\nJson,21,85\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>[('John', '20', '90'), ('Jony', '17', '91'), ('Jony', '17', '93'), ('Json', '21', '85'), ('Tom', '19', '80')]\n</code></pre>"},{"location":"python-practics/Day_6/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.We use itemgetter to enable multiple sort keys.</p> <p>Main author's Solution: Python 2</p> <pre><code>from operator import itemgetter, attrgetter\n\nl = []\nwhile True:\n    s = raw_input()\n    if not s:\n        break\n    l.append(tuple(s.split(\",\")))\n\nprint sorted(l, key=itemgetter(0,1,2))\n</code></pre> <p>My Solution: Python 3</p> <pre><code>lst = []\nwhile True:\n    s = input().split(',')\n    if not s[0]:                          # breaks for blank input\n        break\n    lst.append(tuple(s))\n\nlst.sort(key= lambda x:(x[0],int(x[1]),int(x[2])))  # here key is defined by lambda and the data is sorted by element priority 0&gt;1&gt;2 in accending order\nprint(lst)\n</code></pre>"},{"location":"python-practics/Day_6/#conclusion","title":"Conclusion","text":"<p>Before the above problems, I didn't even know about re(regular expression) module and its use. I didn't even know how to sort by multiple keys. To solve those problems in different ways I had to explore and learn those syntax. There are a lots of interesting stuffs in re module though I faced quite a bit hardship to understand many of them.</p>"},{"location":"python-practics/Day_7/","title":"Question 20","text":""},{"location":"python-practics/Day_7/#question","title":"Question:","text":"<p>Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>7\n</code></pre> <p>Then, the output should be:</p>"},{"location":"python-practics/Day_7/#0-7-14","title":"<pre><code>0\n7\n14\n</code></pre>","text":""},{"location":"python-practics/Day_7/#hints","title":"Hints:","text":"<p>Consider use class, function and comprehension.</p> <p>Main author's Solution: Python 2</p>"},{"location":"python-practics/Day_7/#the-solution-code-for-this-problem-was-not-as-reltive-to-as-the-problem-mentioned-and-there-was-a-typing-mistake-while-calling-the-function","title":"The solution code for this problem was not as reltive to as the problem mentioned and there was a typing mistake while calling the function.","text":"<p>Solution: Python 3</p> <pre><code>'''Solution by: ShalomPrinz\n'''\nclass MyGen():\n    def by_seven(self, n):\n        for i in range(0, int(n/7) + 1):\n            yield i * 7\n\nfor i in MyGen().by_seven( int(input('Please enter a number... ')) ):\n    print(i)\n</code></pre> <pre><code>'''Solution by: Seawolf159\n'''\nclass Divisible:\n\n    def by_seven(self, n):\n        for number in range(1,n + 1):\n            if number % 7 == 0: yield number\n\n\ndivisible = Divisible()\ngenerator = divisible.by_seven(int(input(\"Please insert a number. --&gt; \")))\nfor number in generator:\n    print(number)\n</code></pre>"},{"location":"python-practics/Day_7/#question-21","title":"Question 21","text":""},{"location":"python-practics/Day_7/#question_1","title":"Question:","text":"<p>A robot moves in a plane starting from the original point (0,0). The robot can move toward UP, DOWN, LEFT and RIGHT with a given steps. The trace of robot movement is shown as the following:</p> <pre><code>UP 5\nDOWN 3\nLEFT 3\nRIGHT 2\n</code></pre> <p>The numbers after the direction are steps. Please write a program to compute the distance from current position after a sequence of movement and original point. If the distance is a float, then just print the nearest integer. Example: If the following tuples are given as input to the program:</p> <pre><code>UP 5\nDOWN 3\nLEFT 3\nRIGHT 2\n</code></pre> <p>Then, the output of the program should be:</p> <pre><code>2\n</code></pre>"},{"location":"python-practics/Day_7/#hints_1","title":"Hints:","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.Here distance indicates to euclidean distance.Import math module to use sqrt function.</p> <p>Main author's Solution: Python 2</p> <pre><code>import math\npos = [0,0]\nwhile True:\n    s = raw_input()\n    if not s:\n        break\n    movement = s.split(\" \")\n    direction = movement[0]\n    steps = int(movement[1])\n    if direction==\"UP\":\n        pos[0]+=steps\n    elif direction==\"DOWN\":\n        pos[0]-=steps\n    elif direction==\"LEFT\":\n        pos[1]-=steps\n    elif direction==\"RIGHT\":\n        pos[1]+=steps\n    else:\n        pass\n\nprint int(round(math.sqrt(pos[1]**2+pos[0]**2)))\n</code></pre> <p>My Solution: Python 3</p>"},{"location":"python-practics/Day_7/#import-math-xy-00-while-true-s-inputsplit-if-not-s-break-if-s0up-s0-indicates-command-x-ints1-s1-indicates-unit-of-move-if-s0down-xints1-if-s0left-y-ints1-if-s0right-yints1-np-means-np-dist-roundmathsqrtx2-y2-euclidean-distance-square-root-of-x2y2-and-rounding-it-to-nearest-integer-printdist","title":"<pre><code>import  math\n\nx,y = 0,0\nwhile True:\n    s = input().split()\n    if not s:\n        break\n    if s[0]=='UP':                  # s[0] indicates command\n        x-=int(s[1])                # s[1] indicates unit of move\n    if s[0]=='DOWN':\n        x+=int(s[1])\n    if s[0]=='LEFT':\n        y-=int(s[1])\n    if s[0]=='RIGHT':\n        y+=int(s[1])\n                                    # N**P means N^P\ndist = round(math.sqrt(x**2 + y**2))  # euclidean distance = square root of (x^2+y^2) and rounding it to nearest integer\nprint(dist)\n</code></pre>","text":""},{"location":"python-practics/Day_7/#solution-by-pratikb0501-from-math-import-sqrt-lst-position-00-while-true-a-input-if-not-a-break-lstappenda-for-i-in-lst-if-up-in-i-position0-intistripup-if-down-in-i-position0-intistripdown-if-left-in-i-position1-intistripleft-if-right-in-i-position1-intistripright-printroundsqrtposition1-2-position0-2","title":"<pre><code>'''Solution by: pratikb0501\n'''\n\nfrom math import sqrt\nlst = []\nposition = [0,0]\nwhile True:\n    a = input()\n    if not a:\n        break\n    lst.append(a)\nfor i in lst:\n    if 'UP' in i:\n        position[0] -= int(i.strip('UP '))\n    if 'DOWN' in i:\n        position[0] += int(i.strip('DOWN '))\n    if 'LEFT' in i:\n        position[1] -= int(i.strip('LEFT '))\n    if 'RIGHT' in i:\n        position[1] += int(i.strip('RIGHT '))\nprint(round(sqrt(position[1] ** 2 + position[0] ** 2)))\n</code></pre>","text":""},{"location":"python-practics/Day_8/","title":"Question 22","text":""},{"location":"python-practics/Day_8/#question","title":"Question:","text":"<p>Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically.</p> <p>Suppose the following input is supplied to the program:</p> <pre><code>New to Python or choosing between Python 2 and Python 3? Read Python 2 or Python 3.\n</code></pre> <p>Then, the output should be:</p> <pre><code>2:2\n3.:1\n3?:1\nNew:1\nPython:5\nRead:1\nand:1\nbetween:1\nchoosing:1\nor:2\nto:1\n</code></pre>"},{"location":"python-practics/Day_8/#hints","title":"Hints","text":"<p>In case of input data being supplied to the question, it should be assumed to be a console input.</p> <p>Main author's Solution: Python 2</p> <pre><code>freq = {}   # frequency of words in text\nline = raw_input()\nfor word in line.split():\n    freq[word] = freq.get(word,0)+1\n\nwords = freq.keys()\nwords.sort()\n\nfor w in words:\n    print \"%s:%d\" % (w,freq[w])\n</code></pre> <p>My Solution: Python 3</p> <pre><code>ss = input().split()\nword = sorted(set(ss))     # split words are stored and sorted as a set\n\nfor i in word:\n    print(\"{0}:{1}\".format(i,ss.count(i)))\n</code></pre> <p>OR</p> <pre><code>ss = input().split()\ndict = {}\nfor i in ss:\n    i = dict.setdefault(i,ss.count(i))    # setdefault() function takes key &amp; value to set it as dictionary.\n\ndict = sorted(dict.items())               # items() function returns both key &amp; value of dictionary as a list\n                                          # and then sorted. The sort by default occurs in order of 1st -&gt; 2nd key\nfor i in dict:\n    print(\"%s:%d\"%(i[0],i[1]))\n</code></pre> <p>OR</p> <pre><code>ss = input().split()\ndict = {i:ss.count(i) for i in ss}     # sets dictionary as i-&gt; split word &amp; ss.count(i) -&gt; total occurrence of i in ss\ndict = sorted(dict.items())            # items() function returns both key &amp; value of dictionary as a list\n                                       # and then sorted. The sort by default occurs in order of 1st -&gt; 2nd key\nfor i in dict:\n    print(\"%s:%d\"%(i[0],i[1]))\n</code></pre> <p>OR</p> <pre><code>from collections import Counter\n\nss = input().split()\nss = Counter(ss)         # returns key &amp; frequency as a dictionary\nss = sorted(ss.items())  # returns as a tuple list\n\nfor i in ss:\n    print(\"%s:%d\"%(i[0],i[1]))\n</code></pre> <p>Solution by: AnjanKumarG</p> <pre><code>from pprint import pprint\np=input().split()\npprint({i:p.count(i) for i in p})\n</code></pre>"},{"location":"python-practics/Day_8/#question-23","title":"Question 23","text":""},{"location":"python-practics/Day_8/#question_1","title":"Question:","text":"<p>Write a method which can calculate square value of number</p>"},{"location":"python-practics/Day_8/#hints_1","title":"Hints:","text":"<pre><code>Using the ** operator which can be written as n**p where means n^p\n</code></pre> <p>Main author's Solution: Python 2</p> <pre><code>def square(num):\n    return num ** 2\n\nprint square(2)\nprint square(3)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>n=int(input())\nprint(n**2)\n</code></pre>"},{"location":"python-practics/Day_8/#question-24","title":"Question 24","text":""},{"location":"python-practics/Day_8/#question_2","title":"Question:","text":"<p>Python has many built-in functions, and if you do not know how to use it, you can read document online or find some books. But Python has a built-in document function for every built-in functions.</p> <p>Please write a program to print some Python built-in functions documents, such as abs(), int(), raw_input()</p> <p>And add document for your own function</p>"},{"location":"python-practics/Day_8/#hints_2","title":"Hints:","text":"<pre><code>The built-in document method is __doc__\n</code></pre> <p>Main author's Solution: Python 2</p> <pre><code>print abs.__doc__\nprint int.__doc__\nprint raw_input.__doc__\n\ndef square(num):\n    '''Return the square value of the input number.\n\n    The input number must be integer.\n    '''\n    return num ** 2\n\nprint square(2)\nprint square.__doc__\n</code></pre> <p>My Solution: Python 3</p> <pre><code>print(str.__doc__)\nprint(sorted.__doc__)\n\ndef pow(n,p):\n    '''\n    param n: This is any integer number\n    param p: This is power over n\n    return:  n to the power p = n^p\n    '''\n\n    return n**p\n\nprint(pow(3,4))\nprint(pow.__doc__)\n</code></pre>"},{"location":"python-practics/Day_8/#question-25","title":"Question 25","text":""},{"location":"python-practics/Day_8/#question_3","title":"Question:","text":"<p>Define a class, which have a class parameter and have a same instance parameter.</p>"},{"location":"python-practics/Day_8/#hints_3","title":"Hints:","text":"<pre><code>Define an instance parameter, need add it in __init__ method.You can init an object with construct parameter or set the value later\n</code></pre> <p>Main author's Solution: Python 2</p> <pre><code>class Person:\n    # Define the class parameter \"name\"\n    name = \"Person\"\n\n    def __init__(self, name = None):\n        # self.name is the instance parameter\n        self.name = name\n\njeffrey = Person(\"Jeffrey\")\nprint \"%s name is %s\" % (Person.name, jeffrey.name)\n\nnico = Person()\nnico.name = \"Nico\"\nprint \"%s name is %s\" % (Person.name, nico.name)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>class Car:\n    name = \"Car\"\n\n    def __init__(self,name = None):\n        self.name = name\n\nhonda=Car(\"Honda\")\nprint(\"%s name is %s\"%(Car.name,honda.name))\n\ntoyota=Car()\ntoyota.name=\"Toyota\"\nprint(\"%s name is %s\"%(Car.name,toyota.name))\n</code></pre>"},{"location":"python-practics/Day_9/","title":"Question 26","text":""},{"location":"python-practics/Day_9/#question","title":"Question:","text":"<p>Define a function which can compute the sum of two numbers.</p>"},{"location":"python-practics/Day_9/#hints","title":"Hints:","text":"<p>Define a function with two numbers as arguments. You can compute the sum in the function and return the value.</p> <p>Main author's Solution: Python 2</p> <pre><code>def SumFunction(number1, number2):\n    return number1 + number2\n\nprint SumFunction(1,2)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>sum = lambda n1,n2 : n1 + n2      # here lambda is use to define little function as sum\nprint(sum(1,2))\n</code></pre>"},{"location":"python-practics/Day_9/#question-27","title":"Question 27","text":""},{"location":"python-practics/Day_9/#question_1","title":"Question:","text":"<p>Define a function that can convert a integer into a string and print it in console.</p>"},{"location":"python-practics/Day_9/#hints_1","title":"Hints:","text":"<p>Use str() to convert a number to string.</p> <p>Main author's Solution: Python 2</p> <pre><code>def printValue(n):\n    print str(n)\n\nprintValue(3)\n</code></pre> <p>My Solution: Python 3</p> <pre><code>conv = lambda x : str(x)\nn = conv(10)\nprint(n)\nprint(type(n))            # checks the type of the variable\n</code></pre>"},{"location":"python-practics/Day_9/#question-28","title":"Question 28","text":""},{"location":"python-practics/Day_9/#question_2","title":"Question:","text":"<p>Define a function that can receive two integer numbers in string form and compute their sum and then print it in console.</p>"},{"location":"python-practics/Day_9/#hints_2","title":"Hints:","text":"<p>Use int() to convert a string to integer.</p> <p>Main author's Solution: Python 2</p> <pre><code>def printValue(s1,s2):\n    print int(s1) + int(s2)\nprintValue(\"3\",\"4\") #7\n</code></pre> <p>My Solution: Python 3</p> <pre><code>sum = lambda s1,s2 : int(s1) + int(s2)\nprint(sum(\"10\",\"45\"))      # 55\n</code></pre>"},{"location":"python-practics/Day_9/#question-29","title":"Question 29","text":""},{"location":"python-practics/Day_9/#question_3","title":"Question:","text":"<p>Define a function that can accept two strings as input and concatenate them and then print it in console.</p>"},{"location":"python-practics/Day_9/#hints_3","title":"Hints:","text":"<p>Use + sign to concatenate the strings.</p> <p>Main author's Solution: Python 2</p> <pre><code>def printValue(s1,s2):\n    print s1 + s2\n\nprintValue(\"3\",\"4\") #34\n</code></pre> <p>My Solution: Python 3</p> <pre><code>sum = lambda s1,s2 : s1 + s2\nprint(sum(\"10\",\"45\"))        # 1045\n</code></pre>"},{"location":"python-practics/Day_9/#question-30","title":"Question 30","text":""},{"location":"python-practics/Day_9/#question_4","title":"Question:","text":"<p>Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print all strings line by line.</p>"},{"location":"python-practics/Day_9/#hints_4","title":"Hints:","text":"<p>Use len() function to get the length of a string.</p> <p>Main author's Solution: Python 2</p> <pre><code>def printValue(s1,s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    if len1 &gt; len2:\n        print s1\n    elif len2 &gt; len1:\n        print s2\n    else:\n        print s1\n        print s2\n\nprintValue(\"one\",\"three\")\n</code></pre> <p>My Solution: Python 3</p> <pre><code>def printVal(s1,s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    if len1 &gt; len2:\n        print(s1)\n    elif len1 &lt; len2:\n        print(s2)\n    else:\n        print(s1)\n        print(s2)\n\ns1,s2=input().split()\nprintVal(s1,s2)\n</code></pre> <pre><code>'''Solution by: yuan1z'''\nfunc = lambda a,b: print(max((a,b),key=len)) if len(a)!=len(b) else print(a+'\\n'+b)\n</code></pre>"}]}